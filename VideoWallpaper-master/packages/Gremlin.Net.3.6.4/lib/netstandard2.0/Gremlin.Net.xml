<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gremlin.Net</name>
    </assembly>
    <members>
        <member name="M:Gremlin.Net.Driver.ConnectionPool.EnsurePoolIsHealthyAsync">
            <summary>
                Replaces dead connections.
            </summary>
            <returns>True if the pool was repaired, false if repairing was not necessary.</returns>
        </member>
        <member name="T:Gremlin.Net.Driver.ConnectionPoolSettings">
            <summary>
                Holds settings for the <see cref="T:Gremlin.Net.Driver.ConnectionPool"/>.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.ConnectionPoolSettings.PoolSize">
            <summary>
                Gets or sets the size of the connection pool.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified pool size is less than or equal to zero.</exception>
            <remarks>
                The default value is 8.
            </remarks>
        </member>
        <member name="P:Gremlin.Net.Driver.ConnectionPoolSettings.MaxInProcessPerConnection">
            <summary>
                Gets or sets the maximum number of in-flight requests that can occur on a connection.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified number is less than or equal to zero.</exception>
            <remarks>
                The default value is 16. A <see cref="T:Gremlin.Net.Driver.Exceptions.ConnectionPoolBusyException" /> is thrown if this limit is reached
                on all connections when a new request comes in.
            </remarks>
        </member>
        <member name="P:Gremlin.Net.Driver.ConnectionPoolSettings.ReconnectionAttempts">
             <summary>
                 Gets or sets the number of attempts to get an open connection from the pool to submit a request.
             </summary>
             <exception cref="T:System.ArgumentOutOfRangeException">The number of attempts specified is less than zero.</exception>
             <remarks>
                 The driver always tries to reconnect to a server in the background after it has noticed that a
                 connection is dead. This setting only specifies how often the driver will retry to get an open
                 connection from its pool when no open connection is available to submit a request.  
                 These retries give the driver time to establish new connections to the server that might have been
                 unavailable temporarily or that might have closed the connections, e.g., because they were idle for some
                 time.
             
                 The default value is 4. A <see cref="T:Gremlin.Net.Driver.Exceptions.ServerUnavailableException" /> is thrown if the server can still
                 not be reached after this many retry attempts.
            
                 Setting this to zero means that the exception is thrown immediately when no open connection is available
                 to submit a request. The driver will however still try to reconnect to the server in the background for
                 subsequent requests.
             </remarks>
        </member>
        <member name="P:Gremlin.Net.Driver.ConnectionPoolSettings.ReconnectionBaseDelay">
             <summary>
                 Gets or sets the base delay used for the exponential backoff for the reconnection attempts.
             </summary>
             <exception cref="T:System.ArgumentOutOfRangeException">The specified delay is negative or zero.</exception>
             <remarks>
                 The driver employs an exponential backoff strategy that uses this base delay for its reconnection
                 attempts. With a base delay of 100 ms for example, retries happen after 100 ms, 200 ms, 400 ms, 800 ms,
                 and so on, assuming that enough <see cref="P:Gremlin.Net.Driver.ConnectionPoolSettings.ReconnectionAttempts"/> are configured.
            
                 The default value is 1 second.
             </remarks>
        </member>
        <member name="P:Gremlin.Net.Driver.ConnectionPoolSettings.EnableUserAgentOnConnect">
            <summary>
            Gets or sets whether a connection pool will send a user agent during web socket handshakes
            </summary>
            <remarks>
            The default value is true. When enabled, user agents will only be sent during the web socket
            handshake. User agent follows the form:
            [Application Name] [GLV Name].[Version] [Language Runtime Version] [OS].[Version] [CPU Architecture]
            </remarks>
        </member>
        <member name="T:Gremlin.Net.Driver.Exceptions.ConnectionClosedException">
            <summary>
                The exception that is thrown for requests that in-flight when the underlyingg websocket is closed by the server.
                Requests that recieve this exception will be in a non-deteministic state and may need to be retried.
            </summary>
            <remarks>
                It is recommended to use the same request retry policy that is applied when a <see cref="T:System.Net.WebSockets.WebSocketException" />,
                <see cref="T:System.Net.Sockets.SocketException"/>, <see cref="T:System.IO.IOException" />.
            </remarks>
        </member>
        <member name="P:Gremlin.Net.Driver.Exceptions.ConnectionClosedException.Status">
            <summary>
                Gets the well-known WebSocket close status code provided by the server.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.Exceptions.ConnectionClosedException.Description">
            <summary>
                Gets the Websocket closure description provided by the server.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.Exceptions.ConnectionClosedException.#ctor(System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Driver.Exceptions.ConnectionClosedException" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Driver.Exceptions.ConnectionPoolBusyException">
            <summary>
                The exception that is thrown when all connections in the pool have reached their maximum number of in-flight
                requests.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.Exceptions.ConnectionPoolBusyException.PoolSize">
            <summary>
                Gets the size of the connection pool.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.Exceptions.ConnectionPoolBusyException.MaxInProcessPerConnection">
            <summary>
                Gets the maximum number of in-flight requests that can occur on a connection.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.Exceptions.ConnectionPoolBusyException.#ctor(System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Driver.Exceptions.ConnectionPoolBusyException" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Driver.Exceptions.NoConnectionAvailableException">
            <summary>
                The exception that is thrown when no connection is available to service a request.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.Exceptions.NoConnectionAvailableException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Driver.Exceptions.NoConnectionAvailableException" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.Exceptions.NoConnectionAvailableException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Driver.Exceptions.NoConnectionAvailableException" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.Exceptions.NoConnectionAvailableException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Driver.Exceptions.NoConnectionAvailableException" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Driver.Exceptions.ResponseException">
            <summary>
                The exception that is thrown when a response is received from Gremlin Server that indicates that an error occurred.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.Exceptions.ResponseException.#ctor(Gremlin.Net.Driver.Messages.ResponseStatusCode,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Driver.Exceptions.ResponseException" /> class.
            </summary>
            <param name="statusCode">The status code returned by the server.</param>
            <param name="statusAttributes">The status attributes from the gremlin response.</param>
            <param name="message">The error message string.</param>
        </member>
        <member name="P:Gremlin.Net.Driver.Exceptions.ResponseException.StatusCode">
            <summary>
                Gets the status code returned from the server.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.Exceptions.ResponseException.StatusAttributes">
            <summary>
                Gets the status attributes from the gremlin response
            </summary>
        </member>
        <member name="T:Gremlin.Net.Driver.Exceptions.ServerUnavailableException">
            <summary>
                The exception that is thrown when no connection is available to the <see cref="T:Gremlin.Net.Driver.GremlinServer"/>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.Exceptions.ServerUnavailableException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Driver.Exceptions.ServerUnavailableException" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Driver.GremlinClient">
            <summary>
                Provides a mechanism for submitting Gremlin requests to one Gremlin Server.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.GremlinClient.#ctor(Gremlin.Net.Driver.GremlinServer,Gremlin.Net.Structure.IO.GraphSON.GraphSONReader,Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter,Gremlin.Net.Driver.ConnectionPoolSettings,System.Action{System.Net.WebSockets.ClientWebSocketOptions},System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Driver.GremlinClient" /> class for the specified Gremlin Server.
            </summary>
            <param name="gremlinServer">The <see cref="T:Gremlin.Net.Driver.GremlinServer" /> the requests should be sent to.</param>
            <param name="graphSONReader">A <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONReader" /> instance to read received GraphSON data.</param>
            <param name="graphSONWriter">a <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter" /> instance to write GraphSON data.</param>
            <param name="connectionPoolSettings">The <see cref="T:Gremlin.Net.Driver.ConnectionPoolSettings" /> for the connection pool.</param>
            <param name="webSocketConfiguration">
                A delegate that will be invoked with the <see cref="T:System.Net.WebSockets.ClientWebSocketOptions" />
                object used to configure WebSocket connections.
            </param>
            <param name="sessionId">The session Id if Gremlin Client in session mode, defaults to null as session-less Client.</param>
        </member>
        <member name="M:Gremlin.Net.Driver.GremlinClient.#ctor(Gremlin.Net.Driver.GremlinServer,Gremlin.Net.Structure.IO.GraphSON.GraphSONReader,Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter,System.String,Gremlin.Net.Driver.ConnectionPoolSettings,System.Action{System.Net.WebSockets.ClientWebSocketOptions},System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Driver.GremlinClient" /> class for the specified Gremlin Server.
            </summary>
            <param name="gremlinServer">The <see cref="T:Gremlin.Net.Driver.GremlinServer" /> the requests should be sent to.</param>
            <param name="graphSONReader">A <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONReader" /> instance to read received GraphSON data.</param>
            <param name="graphSONWriter">a <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter" /> instance to write GraphSON data.</param>
            <param name="mimeType">The GraphSON version mime type, defaults to latest supported by the server.</param>
            <param name="connectionPoolSettings">The <see cref="T:Gremlin.Net.Driver.ConnectionPoolSettings" /> for the connection pool.</param>
            <param name="webSocketConfiguration">
                A delegate that will be invoked with the <see cref="T:System.Net.WebSockets.ClientWebSocketOptions" />
                object used to configure WebSocket connections.
            </param>
            <param name="sessionId">The session Id if Gremlin Client in session mode, defaults to null as session-less Client.</param>
        </member>
        <member name="M:Gremlin.Net.Driver.GremlinClient.#ctor(Gremlin.Net.Driver.GremlinServer,Gremlin.Net.Driver.IMessageSerializer,Gremlin.Net.Driver.ConnectionPoolSettings,System.Action{System.Net.WebSockets.ClientWebSocketOptions},System.String,System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Driver.GremlinClient" /> class for the specified Gremlin Server.
            </summary>
            <param name="gremlinServer">The <see cref="T:Gremlin.Net.Driver.GremlinServer" /> the requests should be sent to.</param>
            <param name="messageSerializer">
                A <see cref="T:Gremlin.Net.Driver.IMessageSerializer" /> instance to serialize messages sent to and received
                from the server.
            </param>
            <param name="connectionPoolSettings">The <see cref="T:Gremlin.Net.Driver.ConnectionPoolSettings" /> for the connection pool.</param>
            <param name="webSocketConfiguration">
                A delegate that will be invoked with the <see cref="T:System.Net.WebSockets.ClientWebSocketOptions" />
                object used to configure WebSocket connections.
            </param>
            <param name="sessionId">The session Id if Gremlin Client in session mode, defaults to null as session-less Client.</param>
            <param name="disableCompression">
                Whether to disable compression. Compression is only supported since .NET 6.
                There it is also enabled by default.
            
                Note that compression might make your application susceptible to attacks like CRIME/BREACH. Compression
                should therefore be turned off if your application sends sensitive data to the server as well as data
                that could potentially be controlled by an untrusted user.
            </param>
            <param name="loggerFactory">A factory to create loggers. If not provided, then nothing will be logged.</param>
        </member>
        <member name="P:Gremlin.Net.Driver.GremlinClient.NrConnections">
            <summary>
                Gets the number of open connections.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.GremlinClient.SubmitAsync``1(Gremlin.Net.Driver.Messages.RequestMessage,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Driver.GremlinClient.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Driver.GremlinClient.Dispose(System.Boolean)">
            <summary>
                Releases the resources used by the <see cref="T:Gremlin.Net.Driver.GremlinClient" /> instance.
            </summary>
            <param name="disposing">Specifies whether managed resources should be released.</param>
        </member>
        <member name="T:Gremlin.Net.Driver.GremlinClientExtensions">
            <summary>
                Provides extension methods for the <see cref="T:Gremlin.Net.Driver.IGremlinClient" /> interface.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.GremlinClientExtensions.SubmitWithSingleResultAsync``1(Gremlin.Net.Driver.IGremlinClient,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                Submits a request message that consists of a script with bindings as an asynchronous operation where only a single
                result gets returned.
            </summary>
            <remarks>
                If multiple results are received from Gremlin Server, then only the first gets returned. Use
                <see cref="M:Gremlin.Net.Driver.GremlinClientExtensions.SubmitAsync``1(Gremlin.Net.Driver.IGremlinClient,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)" /> instead when you expect a collection of results.
            </remarks>
            <typeparam name="T">The type of the expected result.</typeparam>
            <param name="gremlinClient">The <see cref="T:Gremlin.Net.Driver.IGremlinClient" /> that submits the request.</param>
            <param name="requestScript">The Gremlin request script to send.</param>
            <param name="bindings">Bindings for parameters used in the requestScript.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A single result received from the Gremlin Server.</returns>
            <exception cref="T:Gremlin.Net.Driver.Exceptions.ResponseException">
                Thrown when a response is received from Gremlin Server that indicates
                that an error occurred.
            </exception>
        </member>
        <member name="M:Gremlin.Net.Driver.GremlinClientExtensions.SubmitWithSingleResultAsync``1(Gremlin.Net.Driver.IGremlinClient,Gremlin.Net.Driver.Messages.RequestMessage,System.Threading.CancellationToken)">
            <summary>
                Submits a request message as an asynchronous operation where only a single result gets returned.
            </summary>
            <remarks>
                If multiple results are received from Gremlin Server, then only the first gets returned. Use
                <see cref="M:Gremlin.Net.Driver.GremlinClientExtensions.SubmitAsync``1(Gremlin.Net.Driver.IGremlinClient,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)" /> instead when you expect a collection of results.
            </remarks>
            <typeparam name="T">The type of the expected result.</typeparam>
            <param name="gremlinClient">The <see cref="T:Gremlin.Net.Driver.IGremlinClient" /> that submits the request.</param>
            <param name="requestMessage">The <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage" /> to send.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A single result received from the Gremlin Server.</returns>
            <exception cref="T:Gremlin.Net.Driver.Exceptions.ResponseException">
                Thrown when a response is received from Gremlin Server that indicates
                that an error occurred.
            </exception>
        </member>
        <member name="M:Gremlin.Net.Driver.GremlinClientExtensions.SubmitAsync(Gremlin.Net.Driver.IGremlinClient,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                Submits a request message that consists of a script with bindings as an asynchronous operation without returning
                the result received from the Gremlin Server.
            </summary>
            <param name="gremlinClient">The <see cref="T:Gremlin.Net.Driver.IGremlinClient" /> that submits the request.</param>
            <param name="requestScript">The Gremlin request script to send.</param>
            <param name="bindings">Bindings for parameters used in the requestScript.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:Gremlin.Net.Driver.Exceptions.ResponseException">
                Thrown when a response is received from Gremlin Server that indicates
                that an error occurred.
            </exception>
        </member>
        <member name="M:Gremlin.Net.Driver.GremlinClientExtensions.SubmitAsync(Gremlin.Net.Driver.IGremlinClient,Gremlin.Net.Driver.Messages.RequestMessage,System.Threading.CancellationToken)">
            <summary>
                Submits a request message as an asynchronous operation without returning the result received from the Gremlin
                Server.
            </summary>
            <param name="gremlinClient">The <see cref="T:Gremlin.Net.Driver.IGremlinClient" /> that submits the request.</param>
            <param name="requestMessage">The <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage" /> to send.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:Gremlin.Net.Driver.Exceptions.ResponseException">
                Thrown when a response is received from Gremlin Server that indicates
                that an error occurred.
            </exception>
        </member>
        <member name="M:Gremlin.Net.Driver.GremlinClientExtensions.SubmitAsync``1(Gremlin.Net.Driver.IGremlinClient,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                Submits a request message that consists of a script with bindings as an asynchronous operation.
            </summary>
            <typeparam name="T">The type of the expected results.</typeparam>
            <param name="gremlinClient">The <see cref="T:Gremlin.Net.Driver.IGremlinClient" /> that submits the request.</param>
            <param name="requestScript">The Gremlin request script to send.</param>
            <param name="bindings">Bindings for parameters used in the requestScript.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A <see cref="T:Gremlin.Net.Driver.ResultSet`1"/> containing the data and status attributes returned from the server.</returns>
            <exception cref="T:Gremlin.Net.Driver.Exceptions.ResponseException">
                Thrown when a response is received from Gremlin Server that indicates
                that an error occurred.
            </exception>
        </member>
        <member name="T:Gremlin.Net.Driver.GremlinServer">
            <summary>
                Represents a Gremlin Server.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.GremlinServer.#ctor(System.String,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Driver.GremlinServer" /> class with the specified connection parameters.
            </summary>
            <param name="hostname">The hostname of the server.</param>
            <param name="port">The port on which Gremlin Server can be reached.</param>
            <param name="enableSsl">Specifies whether SSL should be enabled.</param>
            <param name="username">The username to submit on requests that require authentication.</param>
            <param name="password">The password to submit on requests that require authentication.</param>
        </member>
        <member name="P:Gremlin.Net.Driver.GremlinServer.Uri">
            <summary>
                Gets the URI of the Gremlin Server.
            </summary>
            <value>The WebSocket <see cref="T:System.Uri" /> that the Gremlin Server responds to.</value>
        </member>
        <member name="P:Gremlin.Net.Driver.GremlinServer.Username">
            <summary>
                Gets the username to submit on requests that require authentication.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.GremlinServer.Password">
            <summary>
                Gets the password to submit on requests that require authentication.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Driver.IGremlinClient">
            <summary>
                Provides a mechanism for submitting Gremlin requests.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.IGremlinClient.SubmitAsync``1(Gremlin.Net.Driver.Messages.RequestMessage,System.Threading.CancellationToken)">
            <summary>
                Submits a request message as an asynchronous operation.
            </summary>
            <typeparam name="T">The type of the expected results.</typeparam>
            <param name="requestMessage">The <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage" /> to send.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A <see cref="T:Gremlin.Net.Driver.ResultSet`1"/> containing the data and status attributes returned from the server.</returns>
            <exception cref="T:Gremlin.Net.Driver.Exceptions.ResponseException">
                Thrown when a response is received from Gremlin Server that indicates
                that an error occurred.
            </exception>
        </member>
        <member name="T:Gremlin.Net.Driver.IMessageSerializer">
            <summary>
                Serializes data to and from Gremlin Server.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.IMessageSerializer.SerializeMessageAsync(Gremlin.Net.Driver.Messages.RequestMessage,System.Threading.CancellationToken)">
            <summary>
                Serializes a <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage"/>.
            </summary>
            <param name="requestMessage">The <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage"/> to serialize.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The serialized message.</returns>
        </member>
        <member name="M:Gremlin.Net.Driver.IMessageSerializer.DeserializeMessageAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
                Deserializes a <see cref="T:Gremlin.Net.Driver.Messages.ResponseMessage`1"/> from a byte array.
            </summary>
            <param name="message">The serialized message to deserialize.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The deserialized <see cref="T:Gremlin.Net.Driver.Messages.ResponseMessage`1"/>.</returns>
        </member>
        <member name="T:Gremlin.Net.Driver.Messages.RequestMessage">
            <summary>
                The model for a request message sent to the server.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.Messages.RequestMessage.RequestId">
            <summary>
                Gets the ID of this request message.
            </summary>
            <value>A UUID representing the unique identification for the request.</value>
        </member>
        <member name="P:Gremlin.Net.Driver.Messages.RequestMessage.Operation">
            <summary>
                Gets the name of the operation that should be executed by the Gremlin Server.
            </summary>
            <value>
                The name of the "operation" to execute based on the available OpProcessor configured in the Gremlin Server. This
                defaults to "eval" which evaluates a request script.
            </value>
        </member>
        <member name="P:Gremlin.Net.Driver.Messages.RequestMessage.Processor">
            <summary>
                Gets the name of the OpProcessor to utilize.
            </summary>
            <value>
                The name of the OpProcessor to utilize. This defaults to an empty string which represents the default
                OpProcessor for evaluating scripts.
            </value>
        </member>
        <member name="P:Gremlin.Net.Driver.Messages.RequestMessage.Arguments">
            <summary>
                Gets arguments of the <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.Messages.RequestMessage.Build(System.String)">
            <summary>
                Initializes a <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage.Builder" /> to build a <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage" />.
            </summary>
            <param name="operation">The name of the OpProcessor to utilize.</param>
            <returns>A <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage.Builder" /> to build a <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage" />.</returns>
        </member>
        <member name="T:Gremlin.Net.Driver.Messages.RequestMessage.Builder">
            <summary>
                Allows to build <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage" /> objects.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.Messages.RequestMessage.Builder.Processor(System.String)">
            <summary>
                If this value is not set in the builder then the <see cref="P:Gremlin.Net.Driver.Messages.RequestMessage.Processor" /> defaults to
                the standard op processor (empty string).
            </summary>
            <param name="processor">The name of the processor.</param>
            <returns>The <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage.Builder" />.</returns>
        </member>
        <member name="M:Gremlin.Net.Driver.Messages.RequestMessage.Builder.OverrideRequestId(System.Guid)">
            <summary>
                Overrides the request identifier with a specified one, otherwise the
                <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage.Builder" /> will randomly generate a <see cref="T:System.Guid" />.
            </summary>
            <param name="requestId">The request identifier to use.</param>
            <returns>The <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage.Builder" />.</returns>
        </member>
        <member name="M:Gremlin.Net.Driver.Messages.RequestMessage.Builder.AddArgument(System.String,System.Object)">
            <summary>
                Adds and argument to the <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage" />.
            </summary>
            <param name="key">The key of the argument.</param>
            <param name="value">The value of the argument.</param>
            <returns>The <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage.Builder" />.</returns>
        </member>
        <member name="M:Gremlin.Net.Driver.Messages.RequestMessage.Builder.Create">
            <summary>
                Creates the <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage" /> given the settings provided to the <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage.Builder" />.
            </summary>
            <returns>The built <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage" />.</returns>
        </member>
        <member name="T:Gremlin.Net.Driver.Messages.ResponseMessage`1">
            <summary>
                The message returned from the server.
            </summary>
            <typeparam name="T">The type of the data returned.</typeparam>
        </member>
        <member name="P:Gremlin.Net.Driver.Messages.ResponseMessage`1.RequestId">
            <summary>
                Gets or sets the identifier of the <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage"/> that generated this <see cref="T:Gremlin.Net.Driver.Messages.ResponseMessage`1"/>.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.Messages.ResponseMessage`1.Status">
            <summary>
                Gets or sets status information about this <see cref="T:Gremlin.Net.Driver.Messages.ResponseMessage`1"/>.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.Messages.ResponseMessage`1.Result">
            <summary>
                Gets or sets the result with its data and optional meta information.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Driver.Messages.ResponseResult`1">
            <summary>
                Represents the result as a response to a <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage"/> sent as part of a
                <see cref="T:Gremlin.Net.Driver.Messages.ResponseMessage`1"/> by the server.
            </summary>
            <typeparam name="T">The type of the <see cref="P:Gremlin.Net.Driver.Messages.ResponseResult`1.Data"/>.</typeparam>
        </member>
        <member name="P:Gremlin.Net.Driver.Messages.ResponseResult`1.Data">
            <summary>
                Gets or sets the data of this result.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.Messages.ResponseResult`1.Meta">
            <summary>
                Gets or sets meta data of this result.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Driver.Messages.ResponseStatus">
            <summary>
                Represents status information of a <see cref="T:Gremlin.Net.Driver.Messages.ResponseMessage`1"/>.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.Messages.ResponseStatus.Code">
            <summary>
                Gets or sets the <see cref="T:Gremlin.Net.Driver.Messages.ResponseStatusCode"/>.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.Messages.ResponseStatus.Attributes">
            <summary>
                Gets or sets the attributes <see cref="T:System.Collections.Generic.Dictionary`2"/> with protocol-level information.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.Messages.ResponseStatus.Message">
            <summary>
                Gets or sets the message which is just a human-readable string usually associated with errors.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Driver.Messages.ResponseStatusCode">
            <summary>
                Represents the various status codes that Gremlin Server returns.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.Success">
            <summary>
                The server successfully processed a request to completion - there are no messages remaining in this
                stream.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.NoContent">
            <summary>
                The server processed the request but there is no result to return (e.g. an Iterator with no elements)
                - there are no messages remaining in this stream.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.PartialContent">
            <summary>
                The server successfully returned some content, but there is more in the stream to arrive - wait for a
                SUCCESS to signify the end of the stream.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.Unauthorized">
            <summary>
                The request attempted to access resources that the requesting user did not have access to.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.Forbidden">
            <summary>
                The server could authenticate the request, but will not fulfill it.  This is a general purpose code that
                would typically be returned if the request is authenticated but not authorized to do what it is doing.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.Authenticate">
            <summary>
                A challenge from the server for the client to authenticate its request.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.TooManyRequests">
            <summary>
                Indicates that too many requests have been sent in a given amount of time.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.ClientSerializationError">
            <summary>
               The request message contains objects that were not serializable on the client side.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.MalformedRequest">
            <summary>
                The request message was not properly formatted which means it could not be parsed at all or the "op" code
                was not recognized such that Gremlin Server could properly route it for processing. Check the message format
                and retry the request.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.InvalidRequestArguments">
            <summary>
                The request message was parseable, but the arguments supplied in the message were in conflict or incomplete.
                Check the message format and retry the request.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.ServerError">
            <summary>
                A general server error occurred that prevented the request from being processed.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.ServerErrorFailStep">
            <summary>
                A server error that is produced when the fail()-step is triggered.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.ServerErrorTemporary">
            <summary>
                A server error that indicates that the client should retry the request. A graph will typically return this error
                when a transaction fails due to a locking exception or some other sort of concurrent modification. In other
                words, the request was likely valid but the state of the server at the particular time the request arrived
                could not be processed to success, but could be at a later moment.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.ServerEvaluationError">
            <summary>
                The request submitted for processing evaluated by the server with errors and could not be processed.
                Check the script or remote traversal submitted for errors or other problems and then resubmit.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.ServerTimeout">
            <summary>
                The server exceeded one of the timeout settings for the request and could therefore only partially responded
                or did not respond at all.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Messages.ResponseStatusCode.ServerSerializationError">
            <summary>
                The server was not capable of serializing an object that was returned from the script supplied on the request.
                Either transform the object into something Gremlin Server can process within the script or install mapper
                serialization classes to Gremlin Server.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Driver.Remote.DriverRemoteConnection">
            <summary>
                A <see cref="T:Gremlin.Net.Process.Remote.IRemoteConnection" /> implementation for Gremlin Server.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Remote.DriverRemoteConnection._allowedKeys">
            <summary>
            Filter on these keys provided to OptionsStrategy and apply them to the request. Note that
            "scriptEvaluationTimeout" was deprecated in 3.3.9 but still supported in server implementations and will
            be removed in later versions. 
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.Remote.DriverRemoteConnection.IsSessionBound">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Driver.Remote.DriverRemoteConnection.#ctor(System.String,System.Int32,System.String,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
                Initializes a new <see cref="T:Gremlin.Net.Process.Remote.IRemoteConnection" />.
            </summary>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect to.</param>
            <param name="traversalSource">The name of the traversal source on the server to bind to.</param>
            <param name="loggerFactory">A factory to create loggers. If not provided, then nothing will be logged.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when client is null.</exception>
        </member>
        <member name="M:Gremlin.Net.Driver.Remote.DriverRemoteConnection.#ctor(Gremlin.Net.Driver.IGremlinClient,System.String)">
            <summary>
                Initializes a new <see cref="T:Gremlin.Net.Process.Remote.IRemoteConnection" />.
            </summary>
            <param name="client">The <see cref="T:Gremlin.Net.Driver.IGremlinClient" /> that will be used for the connection.</param>
            <param name="traversalSource">The name of the traversal source on the server to bind to.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when client or the traversalSource is null.</exception>
        </member>
        <member name="M:Gremlin.Net.Driver.Remote.DriverRemoteConnection.SubmitAsync``2(Gremlin.Net.Process.Traversal.Bytecode,System.Threading.CancellationToken)">
            <summary>
                Submits <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> for evaluation to a remote Gremlin Server.
            </summary>
            <param name="bytecode">The <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> to submit.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" /> allowing to access the results and side-effects.</returns>
        </member>
        <member name="M:Gremlin.Net.Driver.Remote.DriverRemoteConnection.Tx(Gremlin.Net.Process.Traversal.GraphTraversalSource)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Driver.Remote.DriverRemoteConnection.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Driver.ResultSet`1">
            <summary>
                A ResultSet is returned from the submission of a Gremlin script to the server and represents the results
                provided by the server. ResultSet includes enumerable data and status attributes.
            </summary>
            <typeparam name="T">Type of the result elements</typeparam>
        </member>
        <member name="P:Gremlin.Net.Driver.ResultSet`1.StatusAttributes">
            <summary>
                Gets or sets the status attributes from the gremlin response
            </summary>
        </member>
        <member name="M:Gremlin.Net.Driver.ResultSet`1.#ctor(System.Collections.Generic.IReadOnlyCollection{`0},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Initializes a new instance of the ResultSet class for the specified data and status attributes.
            </summary>
            <param name="data"></param>
            <param name="attributes"></param>
        </member>
        <member name="M:Gremlin.Net.Driver.ResultSet`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Driver.ResultSet`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:Gremlin.Net.Driver.ResultSet`1.Count">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Driver.Tokens">
            <summary>
                String constants used to configure a <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage" />.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.RequestId">
            <summary>
                The key for the unique identifier of the request.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.OpsAuthentication">
            <summary>
                Operation used by the client to authenticate itself.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.OpsBytecode">
            <summary>
                Operation used for a request that contains the Bytecode representation of a Traversal.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.OpsEval">
            <summary>
                Operation used to evaluate a Gremlin script provided as a string.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.OpsClose">
            <summary>
                Operation used to get all the keys of all side-effects as produced by a previously executed Traversal.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.ProcessorTraversal">
            <summary>
                Default OpProcessor.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.ProcessorSession">
            <summary>
                Session OpProcessor.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.ArgsBatchSize">
            <summary>
                Argument name that allows the definition of the number of items each ResponseMessage should
                contain from a particular result - overrides the resultIterationBatchSize server setting.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.ArgsBindings">
            <summary>
                Argument name that allows definition of a map of key/value pairs to apply as variables in the
                context of the Gremlin request sent to the server.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.ArgsAliases">
            <summary>
                Argument name that allows definition of alias names for Graph and TraversalSource objects on the
                remote system.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.ArgsGremlin">
            <summary>
                Argument name that corresponds to the Gremlin to evaluate.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.ArgsSession">
            <summary>
                Argument name that allows to define the id of session.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.ArgsUserAgent">
            <summary>
                Argument name that allows a value that is a custom string that the user can pass to a server that
                might accept it for purpose of identifying the kind of client it came from.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.ArgsLanguage">
            <summary>
                Argument name that allows definition of the flavor of Gremlin used (e.g. gremlin-groovy) to process the request.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.ArgsEvalTimeout">
            <summary>
                Argument name that allows the override of the server setting that determines the maximum time to wait for a
                request to execute on the server.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Driver.Tokens.ArgsSasl">
            <summary>
                Argument name for the response to the server authentication challenge. This value is dependent on the SASL
                authentication mechanism required by the server.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Driver.WebSocketSettings">
            <summary>
                Holds settings for WebSocket connections.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Driver.WebSocketSettings.WebSocketConfigurationCallback">
            <summary>
                Gets or sets the delegate that will be invoked with the <see cref="T:System.Net.WebSockets.ClientWebSocketOptions" />
                object used to configure WebSocket connections.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Remote.IRemoteConnection">
            <summary>
                A simple abstraction of a "connection" to a "server".
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Remote.IRemoteConnection.SubmitAsync``2(Gremlin.Net.Process.Traversal.Bytecode,System.Threading.CancellationToken)">
            <summary>
                Submits <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" /> <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> to a server and returns a
                <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" />.
            </summary>
            <param name="bytecode">The <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> to send.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" /> with the results and optional side-effects.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Remote.IRemoteConnection.Tx(Gremlin.Net.Process.Traversal.GraphTraversalSource)">
            <summary>
                Creates a <see cref="T:Gremlin.Net.Process.Remote.RemoteTransaction" /> in the context of a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversalSource" /> designed to work with
                remote semantics.
            </summary>
            <param name="graphTraversalSource">
                The <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversalSource" /> providing the context for the
                <see cref="T:Gremlin.Net.Process.Remote.RemoteTransaction" />.
            </param>
            <returns>The created <see cref="T:Gremlin.Net.Process.Remote.RemoteTransaction" />.</returns>
        </member>
        <member name="P:Gremlin.Net.Process.Remote.IRemoteConnection.IsSessionBound">
            <summary>
                Determines if the connection is bound to a session.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Remote.RemoteStrategy">
            <summary>
                Reconstructs a <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" /> by submitting it to a remote server via an
                <see cref="T:Gremlin.Net.Process.Remote.IRemoteConnection" /> instance.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Remote.RemoteStrategy.#ctor(Gremlin.Net.Process.Remote.IRemoteConnection)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Remote.RemoteStrategy" /> class.
            </summary>
            <param name="remoteConnection">The <see cref="T:Gremlin.Net.Process.Remote.IRemoteConnection" /> that should be used.</param>
        </member>
        <member name="M:Gremlin.Net.Process.Remote.RemoteStrategy.Apply``2(Gremlin.Net.Process.Traversal.ITraversal{``0,``1})">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Remote.RemoteStrategy.ApplyAsync``2(Gremlin.Net.Process.Traversal.ITraversal{``0,``1},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Process.Remote.RemoteTransaction">
            <summary>
                A controller for a remote transaction that is constructed from <code>g.Tx()</code>. Calling <code>Begin()</code> on
                this object will produce a new <code>GraphTraversalSource</code> that is bound to a remote transaction over which
                multiple traversals may be executed in that context. Calling <code>CommitAsync()</code> or
                <code>RollbackAsync()</code> will then close the transaction and thus, the session. This feature only works with
                transaction enabled graphs.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Remote.RemoteTransaction.#ctor(Gremlin.Net.Process.Remote.IRemoteConnection,Gremlin.Net.Process.Traversal.GraphTraversalSource)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Remote.RemoteTransaction" /> class.
            </summary>
            <param name="connection">The session bound connection that will be used to control this transaction.</param>
            <param name="g">The graph traversal source from which a session bound traversal source will be created.</param>
        </member>
        <member name="M:Gremlin.Net.Process.Remote.RemoteTransaction.Begin">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversalSource" /> that is bound to a remote session which enables a transaction.
            </summary>
            <returns>A <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversalSource" /> bound to a remote session.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if this transaction is already bound to a session.</exception>
        </member>
        <member name="M:Gremlin.Net.Process.Remote.RemoteTransaction.CommitAsync(System.Threading.CancellationToken)">
            <summary>
                Commits the transaction.
            </summary>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
        </member>
        <member name="M:Gremlin.Net.Process.Remote.RemoteTransaction.RollbackAsync">
            <summary>
                Rolls back the transaction.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.AnonymousTraversalSource">
            <summary>
                Provides a method for creating a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversalSource"/> that does not spawn from a
                <see cref="T:Gremlin.Net.Structure.Graph"/> instance. 
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.AnonymousTraversalSource.Traversal">
            <summary>
                Generates a reusable <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversalSource" /> instance.
            </summary>
            <returns>A graph traversal source.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Barrier.GetByValue(System.String)">
            <summary>
            Gets the Barrier enumeration by value.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Binding">
            <summary>
                Associates a variable with a value.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Binding.#ctor(System.String,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Binding" /> class.
            </summary>
            <param name="key">The key that identifies the <see cref="T:Gremlin.Net.Process.Traversal.Binding" />.</param>
            <param name="value">The value of the <see cref="T:Gremlin.Net.Process.Traversal.Binding" />.</param>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Binding.Key">
            <summary>
                Gets the key that identifies the <see cref="T:Gremlin.Net.Process.Traversal.Binding" />.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Binding.Value">
            <summary>
                Gets the value of the <see cref="T:Gremlin.Net.Process.Traversal.Binding" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Binding.Equals(Gremlin.Net.Process.Traversal.Binding)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Binding.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Binding.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Bindings">
            <summary>
                Bindings are used to associate a variable with a value.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Bindings.Instance">
            <summary>
                Gets an instance of the <see cref="T:Gremlin.Net.Process.Traversal.Bindings" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Bindings.Of``1(System.String,``0)">
            <summary>
                Binds the variable to the specified value.
            </summary>
            <param name="variable">The variable to bind.</param>
            <param name="value">The value to which the variable should be bound.</param>
            <returns>The bound value.</returns>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Bytecode">
            <summary>
                A language agnostic representation of <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" /> mutations.
            </summary>
            <remarks>
                Bytecode is simply a list of ordered instructions.
                Bytecode can be serialized between environments and machines by way of a GraphSON representation.
                Thus, Gremlin.Net can create bytecode in C# and ship it to Gremlin-Java for evaluation in Java.
            </remarks>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Bytecode.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Bytecode.#ctor(Gremlin.Net.Process.Traversal.Bytecode)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> class.
            </summary>
            <param name="byteCode">Already existing <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> that should be cloned.</param>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Bytecode.SourceInstructions">
            <summary>
                Gets the traversal source instructions.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Bytecode.StepInstructions">
            <summary>
                Gets the <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" /> instructions.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Bytecode.AddSource(System.String,System.Object[])">
            <summary>
                Add a traversal source instruction to the bytecode.
            </summary>
            <param name="sourceName">The traversal source method name (e.g. withSack()).</param>
            <param name="args">The traversal source method arguments.</param>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Bytecode.AddStep(System.String,System.Object[])">
            <summary>
                Adds a <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" /> instruction to the bytecode.
            </summary>
            <param name="stepName">The traversal method name (e.g. out()).</param>
            <param name="args">The traversal method arguments.</param>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Bytecode.ToString">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Cardinality.GetByValue(System.String)">
            <summary>
            Gets the Cardinality enumeration by value.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Column.GetByValue(System.String)">
            <summary>
            Gets the Column enumeration by value.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.DefaultTraversal`2">
            <summary>
                A traversal represents a directed walk over a graph.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.DefaultTraversal`2.Bytecode">
            <summary>
                Gets the <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> representation of this traversal.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.DefaultTraversal`2.IsAnonymous">
            <summary>
                Determines if this traversal was spawned anonymously or not.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.DefaultTraversal`2.Traversers">
            <summary>
                Gets or sets the <see cref="T:Gremlin.Net.Process.Traversal.Traverser" />'s of this traversal that hold the results of the traversal.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.DefaultTraversal`2.TraversalStrategies">
            <summary>
                Gets or sets the <see cref="T:Gremlin.Net.Process.Traversal.ITraversalStrategy" /> strategies of this traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.DefaultTraversal`2.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.DefaultTraversal`2.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.DefaultTraversal`2.Reset">
            <summary>
                Reset is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown always as this operation is not supported.</exception>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.DefaultTraversal`2.Current">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.DefaultTraversal`2.GetValue(System.Type,System.Object)">
            <summary>
            Gets the value, converting to the expected type when necessary and supported. 
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.DefaultTraversal`2.HasNext">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.DefaultTraversal`2.Next">
            <summary>
                Gets the next result from the traversal.
            </summary>
            <returns>The result.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.DefaultTraversal`2.Next(System.Int32)">
            <summary>
                Gets the next n-number of results from the traversal.
            </summary>
            <param name="amount">The number of results to get.</param>
            <returns>The n-results.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.DefaultTraversal`2.Iterate">
            <summary>
                Iterates all <see cref="T:Gremlin.Net.Process.Traversal.Traverser" /> instances in the traversal.
            </summary>
            <returns>The fully drained traversal.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.DefaultTraversal`2.NextTraverser">
            <summary>
                Gets the next <see cref="T:Gremlin.Net.Process.Traversal.Traverser" />.
            </summary>
            <returns>The next <see cref="T:Gremlin.Net.Process.Traversal.Traverser" />.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.DefaultTraversal`2.ToList">
            <summary>
                Puts all the results into a <see cref="T:System.Collections.Generic.List`1" />.
            </summary>
            <returns>The results in a list.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.DefaultTraversal`2.ToSet">
            <summary>
                Puts all the results into a <see cref="T:System.Collections.Generic.HashSet`1" />.
            </summary>
            <returns>The results in a set.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.DefaultTraversal`2.Promise``1(System.Func{Gremlin.Net.Process.Traversal.ITraversal{`0,`1},``0},System.Threading.CancellationToken)">
            <summary>
                Starts a promise to execute a function on the current traversal that will be completed in the future.
            </summary>
            <typeparam name="TReturn">The return type of the <paramref name="callback" />.</typeparam>
            <param name="callback">The function to execute on the current traversal.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The result of the executed <paramref name="callback" />.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Direction.GetByValue(System.String)">
            <summary>
            Gets the Direction enumeration by value.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.EnumWrapper">
            <summary>
                Represents an enum.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.EnumWrapper.EnumName">
            <summary>
                Gets the name of the enum.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.EnumWrapper.EnumValue">
            <summary>
                Gets the value of the enum.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.EnumWrapper.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.EnumWrapper" /> class.
            </summary>
            <param name="enumName">The name of the enum.</param>
            <param name="enumValue">The value of the enum.</param>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.EnumWrapper.Equals(Gremlin.Net.Process.Traversal.EnumWrapper)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.EnumWrapper.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.EnumWrapper.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.EnumWrapper.ToString">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.GraphOp">
            <summary>
                A graph operation is a static <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> form that does not translate to a traversal but instead
                refers to a specific function to perform on a graph instance.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.GraphOp.Commit">
            <summary>
                Commit a transaction.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.GraphOp.Rollback">
            <summary>
                Rollback a transaction.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphSONVersion.GetByValue(System.String)">
            <summary>
            Gets the GraphSONVersion enumeration by value.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.GraphTraversal`2">
            <summary>
                Graph traversals are the primary way in which graphs are processed.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.#ctor(System.Collections.Generic.ICollection{Gremlin.Net.Process.Traversal.ITraversalStrategy},Gremlin.Net.Process.Traversal.Bytecode)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> class.
            </summary>
            <param name="traversalStrategies">The traversal strategies to be used by this graph traversal at evaluation time.</param>
            <param name="bytecode">The <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> associated with the construction of this graph traversal.</param>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.#ctor(System.Collections.Generic.ICollection{Gremlin.Net.Process.Traversal.ITraversalStrategy},Gremlin.Net.Process.Traversal.Bytecode,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> class.
            </summary>
            <param name="traversalStrategies">The traversal strategies to be used by this graph traversal at evaluation time.</param>
            <param name="bytecode">The <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> associated with the construction of this graph traversal.</param>
            <param name="anonymous">Set to true if spawned from an anonymous traversal source and false otherwise.</param>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.V(System.Object[])">
            <summary>
                Adds the V step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.AddE(System.String)">
            <summary>
                Adds the addE step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.AddE(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the addE step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.AddV">
            <summary>
                Adds the addV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.AddV(System.String)">
            <summary>
                Adds the addV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.AddV(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the addV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Aggregate(Gremlin.Net.Process.Traversal.Scope,System.String)">
            <summary>
                Adds the aggregate step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Aggregate(System.String)">
            <summary>
                Adds the aggregate step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.And(Gremlin.Net.Process.Traversal.ITraversal[])">
            <summary>
                Adds the and step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.As(System.String,System.String[])">
            <summary>
                Adds the as step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Barrier">
            <summary>
                Adds the barrier step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Barrier(Gremlin.Net.Process.Traversal.IConsumer)">
            <summary>
                Adds the barrier step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Barrier(System.Int32)">
            <summary>
                Adds the barrier step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Both(System.String[])">
            <summary>
                Adds the both step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.BothE(System.String[])">
            <summary>
                Adds the bothE step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.BothV">
            <summary>
                Adds the bothV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Branch``1(Gremlin.Net.Process.Traversal.IFunction)">
            <summary>
                Adds the branch step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Branch``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the branch step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.By">
            <summary>
                Adds the by step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.By(Gremlin.Net.Process.Traversal.IComparator)">
            <summary>
                Adds the by step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.By(Gremlin.Net.Process.Traversal.IFunction)">
            <summary>
                Adds the by step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.By(Gremlin.Net.Process.Traversal.IFunction,Gremlin.Net.Process.Traversal.IComparator)">
            <summary>
                Adds the by step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.By(Gremlin.Net.Process.Traversal.Order)">
            <summary>
                Adds the by step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.By(System.String)">
            <summary>
                Adds the by step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.By(System.String,Gremlin.Net.Process.Traversal.IComparator)">
            <summary>
                Adds the by step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.By(Gremlin.Net.Process.Traversal.T)">
            <summary>
                Adds the by step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.By(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the by step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.By(Gremlin.Net.Process.Traversal.ITraversal,Gremlin.Net.Process.Traversal.IComparator)">
            <summary>
                Adds the by step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Call``1(System.String)">
            <summary>
                Adds the call step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Call``1(System.String,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the call step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Call``1(System.String,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
                Adds the call step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Call``1(System.String,System.Collections.Generic.IDictionary{System.Object,System.Object},Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the call step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Cap``1(System.String,System.String[])">
            <summary>
                Adds the cap step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Choose``1(Gremlin.Net.Process.Traversal.IFunction)">
            <summary>
                Adds the choose step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Choose``1(Gremlin.Net.Process.Traversal.IPredicate,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the choose step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Choose``1(Gremlin.Net.Process.Traversal.IPredicate,Gremlin.Net.Process.Traversal.ITraversal,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the choose step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Choose``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the choose step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Choose``1(Gremlin.Net.Process.Traversal.ITraversal,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the choose step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Choose``1(Gremlin.Net.Process.Traversal.ITraversal,Gremlin.Net.Process.Traversal.ITraversal,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the choose step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Coalesce``1(Gremlin.Net.Process.Traversal.ITraversal[])">
            <summary>
                Adds the coalesce step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Coin(System.Double)">
            <summary>
                Adds the coin step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.ConnectedComponent">
            <summary>
                Adds the connectedComponent step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Constant``1(``0)">
            <summary>
                Adds the constant step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Count">
            <summary>
                Adds the count step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Count(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Adds the count step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.CyclicPath">
            <summary>
                Adds the cyclicPath step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Dedup(Gremlin.Net.Process.Traversal.Scope,System.String[])">
            <summary>
                Adds the dedup step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Dedup(System.String[])">
            <summary>
                Adds the dedup step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Drop">
            <summary>
                Adds the drop step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Element">
            <summary>
                Adds the element step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.ElementMap``1(System.String[])">
            <summary>
                Adds the elementMap step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Emit">
            <summary>
                Adds the emit step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Emit(Gremlin.Net.Process.Traversal.IPredicate)">
            <summary>
                Adds the emit step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Emit(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the emit step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Fail">
            <summary>
                Adds the fail step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Fail(System.String)">
            <summary>
                Adds the fail step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Fail(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                Adds the fail step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Filter(Gremlin.Net.Process.Traversal.IPredicate)">
            <summary>
                Adds the filter step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Filter(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the filter step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.FlatMap``1(Gremlin.Net.Process.Traversal.IFunction)">
            <summary>
                Adds the flatMap step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.FlatMap``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the flatMap step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Fold">
            <summary>
                Adds the fold step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Fold``1(``0,Gremlin.Net.Process.Traversal.IBiFunction)">
            <summary>
                Adds the fold step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.From(System.String)">
            <summary>
                Adds the from step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.From(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the from step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.From(Gremlin.Net.Structure.Vertex)">
            <summary>
                Adds the from step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Group``2">
            <summary>
                Adds the group step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Group(System.String)">
            <summary>
                Adds the group step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.GroupCount``1">
            <summary>
                Adds the groupCount step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.GroupCount(System.String)">
            <summary>
                Adds the groupCount step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Has(System.String)">
            <summary>
                Adds the has step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Has(System.String,System.Object)">
            <summary>
                Adds the has step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Has(System.String,Gremlin.Net.Process.Traversal.P)">
            <summary>
                Adds the has step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Has(System.String,System.String,System.Object)">
            <summary>
                Adds the has step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Has(System.String,System.String,Gremlin.Net.Process.Traversal.P)">
            <summary>
                Adds the has step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Has(System.String,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the has step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Has(Gremlin.Net.Process.Traversal.T,System.Object)">
            <summary>
                Adds the has step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Has(Gremlin.Net.Process.Traversal.T,Gremlin.Net.Process.Traversal.P)">
            <summary>
                Adds the has step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Has(Gremlin.Net.Process.Traversal.T,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the has step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.HasId(System.Object,System.Object[])">
            <summary>
                Adds the hasId step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.HasId(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Adds the hasId step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.HasKey(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Adds the hasKey step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.HasKey(System.String,System.String[])">
            <summary>
                Adds the hasKey step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.HasLabel(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Adds the hasLabel step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.HasLabel(System.String,System.String[])">
            <summary>
                Adds the hasLabel step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.HasNot(System.String)">
            <summary>
                Adds the hasNot step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.HasValue(System.Object,System.Object[])">
            <summary>
                Adds the hasValue step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.HasValue(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Adds the hasValue step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Id">
            <summary>
                Adds the id step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Identity">
            <summary>
                Adds the identity step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.In(System.String[])">
            <summary>
                Adds the in step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.InE(System.String[])">
            <summary>
                Adds the inE step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.InV">
            <summary>
                Adds the inV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Index``1">
            <summary>
                Adds the index step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Inject(`1[])">
            <summary>
                Adds the inject step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Is(System.Object)">
            <summary>
                Adds the is step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Is(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Adds the is step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Key">
            <summary>
                Adds the key step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Label">
            <summary>
                Adds the label step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Limit``1(Gremlin.Net.Process.Traversal.Scope,System.Int64)">
            <summary>
                Adds the limit step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Limit``1(System.Int64)">
            <summary>
                Adds the limit step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Local``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the local step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Loops">
            <summary>
                Adds the loops step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Loops(System.String)">
            <summary>
                Adds the loops step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Map``1(Gremlin.Net.Process.Traversal.IFunction)">
            <summary>
                Adds the map step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Map``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the map step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Match``1(Gremlin.Net.Process.Traversal.ITraversal[])">
            <summary>
                Adds the match step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Math(System.String)">
            <summary>
                Adds the math step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Max``1">
            <summary>
                Adds the max step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Max``1(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Adds the max step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Mean``1">
            <summary>
                Adds the mean step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Mean``1(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Adds the mean step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.MergeE">
            <summary>
                Adds the mergeE step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.MergeE(System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
                Adds the mergeE step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.MergeE(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the mergeE step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.MergeV">
            <summary>
                Adds the mergeV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.MergeV(System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
                Adds the mergeV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.MergeV(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the mergeV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Min``1">
            <summary>
                Adds the min step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Min``1(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Adds the min step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.None">
            <summary>
                Adds the none step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Not(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the not step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Option(System.Object,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the option step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Option(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
                Adds the option step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Option(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the option step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Optional``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the optional step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Or(Gremlin.Net.Process.Traversal.ITraversal[])">
            <summary>
                Adds the or step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Order">
            <summary>
                Adds the order step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Order(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Adds the order step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.OtherV">
            <summary>
                Adds the otherV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Out(System.String[])">
            <summary>
                Adds the out step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.OutE(System.String[])">
            <summary>
                Adds the outE step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.OutV">
            <summary>
                Adds the outV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.PageRank">
            <summary>
                Adds the pageRank step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.PageRank(System.Double)">
            <summary>
                Adds the pageRank step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Path">
            <summary>
                Adds the path step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.PeerPressure">
            <summary>
                Adds the peerPressure step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Profile``1">
            <summary>
                Adds the profile step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Profile(System.String)">
            <summary>
                Adds the profile step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Program(System.Object)">
            <summary>
                Adds the program step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Project``1(System.String,System.String[])">
            <summary>
                Adds the project step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Properties``1(System.String[])">
            <summary>
                Adds the properties step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Property(Gremlin.Net.Process.Traversal.Cardinality,System.Object,System.Object,System.Object[])">
            <summary>
                Adds the property step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Property(System.Object,System.Object,System.Object[])">
            <summary>
                Adds the property step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.PropertyMap``1(System.String[])">
            <summary>
                Adds the propertyMap step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Range``1(Gremlin.Net.Process.Traversal.Scope,System.Int64,System.Int64)">
            <summary>
                Adds the range step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Range``1(System.Int64,System.Int64)">
            <summary>
                Adds the range step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Read">
            <summary>
                Adds the read step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Repeat(System.String,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the repeat step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Repeat(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the repeat step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Sack``1">
            <summary>
                Adds the sack step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Sack(Gremlin.Net.Process.Traversal.IBiFunction)">
            <summary>
                Adds the sack step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Sample(Gremlin.Net.Process.Traversal.Scope,System.Int32)">
            <summary>
                Adds the sample step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Sample(System.Int32)">
            <summary>
                Adds the sample step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Select``1(Gremlin.Net.Process.Traversal.Column)">
            <summary>
                Adds the select step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Select``1(Gremlin.Net.Process.Traversal.Pop,System.String)">
            <summary>
                Adds the select step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Select``1(Gremlin.Net.Process.Traversal.Pop,System.String,System.String,System.String[])">
            <summary>
                Adds the select step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Select``1(Gremlin.Net.Process.Traversal.Pop,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the select step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Select``1(System.String)">
            <summary>
                Adds the select step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Select``1(System.String,System.String,System.String[])">
            <summary>
                Adds the select step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Select``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the select step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.ShortestPath">
            <summary>
                Adds the shortestPath step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.SideEffect(Gremlin.Net.Process.Traversal.IConsumer)">
            <summary>
                Adds the sideEffect step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.SideEffect(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the sideEffect step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.SimplePath">
            <summary>
                Adds the simplePath step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Skip``1(Gremlin.Net.Process.Traversal.Scope,System.Int64)">
            <summary>
                Adds the skip step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Skip``1(System.Int64)">
            <summary>
                Adds the skip step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Store(System.String)">
            <summary>
                Adds the store step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Subgraph(System.String)">
            <summary>
                Adds the subgraph step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Sum``1">
            <summary>
                Adds the sum step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Sum``1(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Adds the sum step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Tail``1">
            <summary>
                Adds the tail step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Tail``1(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Adds the tail step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Tail``1(Gremlin.Net.Process.Traversal.Scope,System.Int64)">
            <summary>
                Adds the tail step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Tail``1(System.Int64)">
            <summary>
                Adds the tail step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.TimeLimit(System.Int64)">
            <summary>
                Adds the timeLimit step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Times(System.Int32)">
            <summary>
                Adds the times step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.To(Gremlin.Net.Process.Traversal.Direction,System.String[])">
            <summary>
                Adds the to step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.To(System.String)">
            <summary>
                Adds the to step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.To(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the to step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.To(Gremlin.Net.Structure.Vertex)">
            <summary>
                Adds the to step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.ToE(Gremlin.Net.Process.Traversal.Direction,System.String[])">
            <summary>
                Adds the toE step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.ToV(Gremlin.Net.Process.Traversal.Direction)">
            <summary>
                Adds the toV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Tree``1">
            <summary>
                Adds the tree step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Tree(System.String)">
            <summary>
                Adds the tree step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Unfold``1">
            <summary>
                Adds the unfold step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Union``1(Gremlin.Net.Process.Traversal.ITraversal[])">
            <summary>
                Adds the union step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Until(Gremlin.Net.Process.Traversal.IPredicate)">
            <summary>
                Adds the until step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Until(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the until step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Value``1">
            <summary>
                Adds the value step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.ValueMap``2(System.String[])">
            <summary>
                Adds the valueMap step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.ValueMap``2(System.Boolean,System.String[])">
            <summary>
                Adds the valueMap step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Values``1(System.String[])">
            <summary>
                Adds the values step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Where(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Adds the where step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Where(System.String,Gremlin.Net.Process.Traversal.P)">
            <summary>
                Adds the where step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Where(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the where step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.With(System.String)">
            <summary>
                Adds the with step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.With(System.String,System.Object)">
            <summary>
                Adds the with step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Write">
            <summary>
                Adds the write step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Clone">
            <summary>
            Make a copy of a traversal that is reset for iteration.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.GraphTraversalSource">
            <summary>
                A <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversalSource" /> is the primary DSL of the Gremlin traversal machine.
                It provides access to all the configurations and steps for Turing complete graph computing.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.GraphTraversalSource.TraversalStrategies">
            <summary>
                Gets or sets the traversal strategies associated with this graph traversal source.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.GraphTraversalSource.Bytecode">
            <summary>
                Gets or sets the <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> associated with the current state of this graph traversal
                source.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversalSource" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.#ctor(System.Collections.Generic.ICollection{Gremlin.Net.Process.Traversal.ITraversalStrategy},Gremlin.Net.Process.Traversal.Bytecode)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversalSource" /> class.
            </summary>
            <param name="traversalStrategies">The traversal strategies associated with this graph traversal source.</param>
            <param name="bytecode">
                The <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> associated with the current state of this graph traversal
                source.
            </param>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.WithRemote(Gremlin.Net.Process.Remote.IRemoteConnection)">
            <summary>
                Configures the <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversalSource" /> as a "remote" to issue the
                <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> for execution elsewhere.
            </summary>
            <param name="remoteConnection">
                The <see cref="T:Gremlin.Net.Process.Remote.IRemoteConnection" /> instance to use to submit the
                <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </param>
            <returns>A <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversalSource" /> configured to use the provided <see cref="T:Gremlin.Net.Process.Remote.IRemoteConnection" />.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.Tx">
            <summary>
                Spawns a new <see cref="T:Gremlin.Net.Process.Remote.RemoteTransaction"/> object that can then start and stop a transaction.
            </summary>
            <returns>The spawned transaction.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if this traversal source is already bound to a session.</exception>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.WithComputer(System.String,System.Nullable{System.Int32},System.String,System.String,Gremlin.Net.Process.Traversal.ITraversal,Gremlin.Net.Process.Traversal.ITraversal,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                Add a GraphComputer class used to execute the traversal.
                This adds a <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.VertexProgramStrategy" /> to the strategies.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.E(System.Object[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the E step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.V(System.Object[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the V step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.AddE(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the addE step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.AddE(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the addE step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.MergeE(System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the mergeE step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.MergeE(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the mergeE step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.AddV">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the addV step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.AddV(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the addV step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.AddV(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the addV step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.MergeV(System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the mergeV step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.MergeV(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the mergeV step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.Inject``1(``0[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the inject step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.Io``1(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the io step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.Call``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the call step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.Call``1(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the call step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.Call``1(System.String,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the call step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.Call``1(System.String,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the call step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GraphTraversalSource.Call``1(System.String,System.Collections.Generic.IDictionary{System.Object,System.Object},Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> off this graph traversal source and adds the call step to that
                traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.GryoVersion.GetByValue(System.String)">
            <summary>
            Gets the GryoVersion enumeration by value.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.IBiFunction">
            <summary>
                Represents a function that accepts two arguments and produces a result. This is the two-arity specialization of
                <see cref="T:Gremlin.Net.Process.Traversal.IFunction"/>.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.IBinaryOperator">
            <summary>
                Represents an operation upon two operands of the same type, producing a result of the same type as the operands.
                This is a specialization of <see cref="T:Gremlin.Net.Process.Traversal.IBiFunction" /> for the case where the operands and the result are all of
                the same type.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.IComparator">
            <summary>
                A comparison function, which imposes a total ordering on some collection of objects.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.IConsumer">
            <summary>
                Represents an operation that accepts a single input argument and returns no result. Unlike most other functional
                interfaces, Consumer is expected to operate via side-effects.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.IFunction">
            <summary>
                Represents a function that accepts one argument and produces a result. 
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Instruction">
            <summary>
                Represents a <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" /> instruction by an operator name and its arguments.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Instruction.#ctor(System.String,System.Object[])">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Instruction" /> class.
            </summary>
            <param name="operatorName">The name of the operator.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Instruction.OperatorName">
            <summary>
                Gets the name of the operator.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Instruction.Arguments">
            <summary>
                Gets the arguments.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Instruction.ToString">
            <summary>
                String representation of the <see cref="T:Gremlin.Net.Process.Traversal.Instruction"/>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Instruction.Equals(Gremlin.Net.Process.Traversal.Instruction)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Instruction.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Instruction.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.IPredicate">
            <summary>
                Represents a predicate (boolean-valued function) of one argument. 
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.ISupplier">
            <summary>
                Represents a supplier of results
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.ITraversal">
            <summary>
            Represents the basic information for a walk over a graph.
            </summary>
            <seealso cref="T:Gremlin.Net.Process.Traversal.ITraversal`2"/>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.ITraversal.Bytecode">
            <summary>
                Gets the <see cref="P:Gremlin.Net.Process.Traversal.ITraversal.Bytecode" /> representation of this traversal.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.ITraversal.IsAnonymous">
            <summary>
                Determines if this traversal was spawned anonymously or not.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.ITraversal.Traversers">
            <summary>
                Gets or sets the <see cref="T:Gremlin.Net.Process.Traversal.Traverser" />'s of this traversal that hold the results of the traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.ITraversal.Iterate">
            <summary>
                Iterates all <see cref="T:Gremlin.Net.Process.Traversal.Traverser" /> instances in the traversal.
            </summary>
            <returns>The fully drained traversal.</returns>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.ITraversal`2">
            <summary>
                A traversal represents a directed walk over a graph.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.ITraversal`2.Next">
            <summary>
                Gets the next result from the traversal.
            </summary>
            <returns>The result.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.ITraversal`2.HasNext">
            <summary>
                Determines if the traversal contains any additional results for iteration.
            </summary>
            <returns>True if there are more results and false otherwise.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.ITraversal`2.Next(System.Int32)">
            <summary>
                Gets the next n-number of results from the traversal.
            </summary>
            <param name="amount">The number of results to get.</param>
            <returns>The n-results.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.ITraversal`2.Iterate">
            <summary>
                Iterates all <see cref="T:Gremlin.Net.Process.Traversal.Traverser" /> instances in the traversal.
            </summary>
            <returns>The fully drained traversal.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.ITraversal`2.NextTraverser">
            <summary>
                Gets the next <see cref="T:Gremlin.Net.Process.Traversal.Traverser" />.
            </summary>
            <returns>The next <see cref="T:Gremlin.Net.Process.Traversal.Traverser" />.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.ITraversal`2.ToList">
            <summary>
                Puts all the results into a <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <returns>The results in a list.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.ITraversal`2.ToSet">
            <summary>
                Puts all the results into a <see cref="T:System.Collections.Generic.ISet`1" />.
            </summary>
            <returns>The results in a set.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.ITraversal`2.Promise``1(System.Func{Gremlin.Net.Process.Traversal.ITraversal{`0,`1},``0},System.Threading.CancellationToken)">
            <summary>
                Starts a promise to execute a function on the current traversal that will be completed in the future.
            </summary>
            <typeparam name="TReturn">The return type of the <paramref name="callback" />.</typeparam>
            <param name="callback">The function to execute on the current traversal.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The result of the executed <paramref name="callback" />.</returns>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.ITraversalStrategy">
            <summary>
                A <see cref="T:Gremlin.Net.Process.Traversal.ITraversalStrategy" /> defines a particular atomic operation for mutating a
                <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" /> prior to its evaluation.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.ITraversalStrategy.Apply``2(Gremlin.Net.Process.Traversal.ITraversal{``0,``1})">
            <summary>
                Applies the strategy to the given <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" />.
            </summary>
            <param name="traversal">The <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" /> the strategy should be applied to.</param>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.ITraversalStrategy.ApplyAsync``2(Gremlin.Net.Process.Traversal.ITraversal{``0,``1},System.Threading.CancellationToken)">
            <summary>
                Applies the strategy to the given <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" /> asynchronously.
            </summary>
            <param name="traversal">The <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" /> the strategy should be applied to.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.IUnaryOperator">
            <summary>
                Represents an operation on a single operand that produces a result of the same type as its operand. This is a
                specialization of Function for the case where the operand and result are of the same type.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.ILambda">
            <summary>
                Represents a lambda.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.ILambda.LambdaExpression">
            <summary>
                Gets the lambda expression.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.ILambda.Language">
            <summary>
                Gets the language of this lambda.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.ILambda.Arguments">
            <summary>
                Gets the arguments of this lambda.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Lambda">
            <summary>
                Provides methods to create lambdas.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Lambda.Groovy(System.String)">
            <summary>
                Creates a new Groovy lambda.
            </summary>
            <param name="expression">The lambda expression.</param>
            <returns>The created lambda.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Lambda.Groovy(System.String,System.Int32)">
            <summary>
                Creates a new Groovy lambda with the specified number of lambda arguments.
            </summary>
            <param name="expression">The lambda expression.</param>
            <param name="arguments">The number of lambda arguments.</param>
            <returns>The created lambda.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Lambda.Python(System.String)">
            <summary>
                Creates a new Python lambda.
            </summary>
            <param name="expression">The lambda expression.</param>
            <returns>The created lambda.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Merge.GetByValue(System.String)">
            <summary>
            Gets the Merge enumeration by value.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.NamingConversions.GetEnumJavaName(System.String,System.String)">
            <summary>
                Gets the Java name equivalent for a given enum value
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Operator.GetByValue(System.String)">
            <summary>
            Gets the Operator enumeration by value.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Order.GetByValue(System.String)">
            <summary>
            Gets the Order enumeration by value.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.P">
            <summary>
                A <see cref="T:Gremlin.Net.Process.Traversal.P" /> is a predicate of the form Func&lt;object, bool&gt;.
                That is, given some object, return true or false.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.P.#ctor(System.String,System.Object,Gremlin.Net.Process.Traversal.P)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.P" /> class.
            </summary>
            <param name="operatorName">The name of the predicate.</param>
            <param name="value">The value of the predicate.</param>
            <param name="other">An optional other predicate that is used as an argument for this predicate.</param>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.P.OperatorName">
            <summary>
                Gets the name of the predicate.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.P.Value">
            <summary>
                Gets the value of the predicate.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.P.Other">
            <summary>
                Gets an optional other predicate that is used as an argument for this predicate.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.P.And(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Returns a composed predicate that represents a logical AND of this predicate and another.
            </summary>
            <param name="otherPredicate">A predicate that will be logically-ANDed with this predicate.</param>
            <returns>The composed predicate.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.P.Or(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Returns a composed predicate that represents a logical OR of this predicate and another.
            </summary>
            <param name="otherPredicate">A predicate that will be logically-ORed with this predicate.</param>
            <returns>The composed predicate.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.P.ToString">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Pick.GetByValue(System.String)">
            <summary>
            Gets the Pick enumeration by value.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Pop.GetByValue(System.String)">
            <summary>
            Gets the Pop enumeration by value.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Scope.GetByValue(System.String)">
            <summary>
            Gets the Scope enumeration by value.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy">
            <summary>
                Provides a common base class for strategies that are only included in <see cref="T:Gremlin.Net.Process.Traversal.Bytecode" />
                to be applied remotely.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.DecorationNamespace">
            <summary>
            Java namespace for decoration strategies.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.FinalizationNamespace">
            <summary>
            Java namespace for finalization strategies.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.OptimizationNamespace">
            <summary>
            Java namespace for optimization strategies.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.VerificationNamespace">
            <summary>
            Java namespace for verification strategies.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.ComputerDecorationNamespace">
            <summary>
            Java namespace for computer decoration strategies.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.#ctor(System.String)">
            <summary>
                Creates a new <see cref="T:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy"/> instance.
            </summary>
            <param name="fqcn">The fully qualified class name (FQCN) from the equivalent Java strategy.</param>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.StrategyName">
            <summary>
                Gets the name of the strategy.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.Fqcn">
            <summary>
                Gets the fully qualified class name (FQCN) from the equivalent Java strategy.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.Configuration">
            <summary>
                Gets the configuration of the strategy.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.Equals(Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.Apply``2(Gremlin.Net.Process.Traversal.ITraversal{``0,``1})">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.ApplyAsync``2(Gremlin.Net.Process.Traversal.ITraversal{``0,``1},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy.ToString">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.ConnectiveStrategy">
            <summary>
                ConnectiveStrategy rewrites the binary conjunction form of <c>a.and().b</c> into an AndStep of
                <c>and(a, b)</c> (likewise for OrStep).
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Decoration.ConnectiveStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.ConnectiveStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.ElementIdStrategy">
            <summary>
                Provides a degree of control over element identifier assignment as some graphs don't provide that feature.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Decoration.ElementIdStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.ElementIdStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.OptionsStrategy">
            <summary>
                OptionsStrategy makes no changes to the traversal itself - it just carries configuration information
                at the traversal level.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Decoration.OptionsStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.OptionsStrategy" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Decoration.OptionsStrategy.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.OptionsStrategy" /> class.
            </summary>
            <param name="options">Specifies the options for the traversal.</param>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.PartitionStrategy">
            <summary>
                Partitions the vertices, edges and vertex properties of a graph into String named partitions.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Decoration.PartitionStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.PartitionStrategy" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Decoration.PartitionStrategy.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean})">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.PartitionStrategy" /> class.
            </summary>
            <param name="partitionKey">Specifies the partition key name.</param>
            <param name="writePartition">
                Specifies the name of the partition to write when adding vertices, edges and vertex
                properties.
            </param>
            <param name="readPartitions">Specifies the partition of the graph to read from.</param>
            <param name="includeMetaProperties">Set to true if vertex properties should get assigned to partitions.</param>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.SeedStrategy">
            <summary>
                A strategy that resets the specified {@code seed} value for Seedable steps like coin(), sample()
                and Order.shuffle, which in turn will produce deterministic results from those steps.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Decoration.SeedStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.SeedStrategy" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Decoration.SeedStrategy.#ctor(System.Int64)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.SeedStrategy" /> class.
            </summary>
            <param name="seed">Specifies the seed the traversal will use.</param>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.SubgraphStrategy">
            <summary>
                Provides a way to limit the view of a <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Decoration.SubgraphStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.SubgraphStrategy" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Decoration.SubgraphStrategy.#ctor(Gremlin.Net.Process.Traversal.ITraversal,Gremlin.Net.Process.Traversal.ITraversal,Gremlin.Net.Process.Traversal.ITraversal,System.Nullable{System.Boolean})">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Decoration.SubgraphStrategy" /> class.
            </summary>
            <param name="vertices">Constrains vertices for the <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" />.</param>
            <param name="edges">Constrains edges for the <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" />.</param>
            <param name="vertexProperties">Constrains vertex properties for the <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" />.</param>
            <param name="checkAdjacentVertices">Determines if filters are applied to the adjacent vertices of an edge.</param>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.AdjacentToIncidentStrategy">
            <summary>
                Optimizes vertex- and value-emitting steps.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Optimization.AdjacentToIncidentStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.AdjacentToIncidentStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.EarlyLimitStrategy">
            <summary>
                Moves <c>Range()</c> steps as far left as possible in order to to reduce backend operations.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Optimization.EarlyLimitStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.EarlyLimitStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.FilterRankingStrategy">
            <summary>
                Reorders filter- and order-steps according to their rank.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Optimization.FilterRankingStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.FilterRankingStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.IdentityRemovalStrategy">
            <summary>
                Looks for <c>Identity()</c>-steps and removes them.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Optimization.IdentityRemovalStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.IdentityRemovalStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.IncidentToAdjacentStrategy">
            <summary>
                Replaces <c>.OutE().InV()</c> with <c>.Out()</c>, <c>.InE().OutV()</c> with <c>In()</c> and <c>.BothE().BothV()</c>
                with <c>Both()</c>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Optimization.IncidentToAdjacentStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.IncidentToAdjacentStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.InlineFilterStrategy">
            <summary>
                Analyzes filter-steps with child traversals that themselves are pure filters.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Optimization.InlineFilterStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.InlineFilterStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.LazyBarrierStrategy">
            <summary>
                Inserts <c>Barrier()</c>-steps into a <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" /> where appropriate in order to gain the "bulking
                optimization".
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Optimization.LazyBarrierStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.LazyBarrierStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.MatchPredicateStrategy">
            <summary>
                Folds any post<c>Where()</c> step that maintains a traversal constraint into <c>Match()</c>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Optimization.MatchPredicateStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.MatchPredicateStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.PathProcessorStrategy">
            <summary>
                Helps to ensure that more traversals meet the local child constraint imposed on OLAP traversals.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Optimization.PathProcessorStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.PathProcessorStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.ProductiveByStrategy">
            <summary>
                Ensures that all by() modulators end up producing a result with null as the default.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Optimization.ProductiveByStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.ProductiveByStrategy" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Optimization.ProductiveByStrategy.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.ProductiveByStrategy" /> class.
            </summary>
            <param name="productiveKeys">Specifies keys that will always be productive.</param>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.RangeByIsCountStrategy">
            <summary>
                Optimizes any occurrence of <c>Count()</c>-step followed by an <c>Is()</c>-step.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Optimization.RangeByIsCountStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Optimization.RangeByIsCountStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Verification.EdgeLabelVerificationStrategy">
            <summary>
                Provides a way to prevent traversals that sub-optimally fail to include edge label specification .
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Verification.EdgeLabelVerificationStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Verification.EdgeLabelVerificationStrategy" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Verification.EdgeLabelVerificationStrategy.#ctor(System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Verification.EdgeLabelVerificationStrategy" /> class.
            </summary>
            <param name="logWarning">Constrains vertices for the <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" />.</param>
            <param name="throwException">Constrains edges for the <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" />.</param>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Verification.LambdaRestrictionStrategy">
            <summary>
                Does not allow lambdas to be used in a <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Verification.LambdaRestrictionStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Verification.LambdaRestrictionStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Verification.ReadOnlyStrategy">
            <summary>
                Detects mutating steps and throws an exception if one is found.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Verification.ReadOnlyStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Verification.ReadOnlyStrategy" /> class.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Strategy.Verification.ReservedKeysVerificationStrategy">
            <summary>
                Provides a way to prevent traversal from using property keys that are reserved terms. By default, these
                are "id" and "label" - providers may have their own reserved terms as well.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Verification.ReservedKeysVerificationStrategy.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Verification.ReservedKeysVerificationStrategy" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Strategy.Verification.ReservedKeysVerificationStrategy.#ctor(System.Boolean,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Strategy.Verification.ReservedKeysVerificationStrategy" /> class
            </summary>
            <param name="logWarning">Write a warning to the configured log on the server if a reserved key is used.</param>
            <param name="throwException">Throw an exception if a reserved key is used.</param>
            <param name="keys">List of keys to define as reserved. If not set then the defaults are used.</param>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.T.GetByValue(System.String)">
            <summary>
            Gets the T enumeration by value.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.TextP">
            <summary>
                A <see cref="T:Gremlin.Net.Process.Traversal.TextP" /> is a predicate of the form Func&lt;string, bool&gt;.
                That is, given some string, return true or false.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.TextP.#ctor(System.String,System.String,Gremlin.Net.Process.Traversal.P)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.TextP" /> class.
            </summary>
            <param name="operatorName">The name of the predicate.</param>
            <param name="value">The value of the predicate.</param>
            <param name="other">An optional other predicate that is used as an argument for this predicate.</param>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.TextP.ToString">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Translator.GroovyTranslator">
            <summary>
                Converts bytecode to a Groovy string of Gremlin.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Translator.GroovyTranslator.Of(System.String)">
            <summary>
                Creates the translator.
            </summary>
            <param name="traversalSource">The traversal source for the traversal to be translated.</param>
            <returns>The created translator instance.</returns>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Translator.GroovyTranslator.TargetLanguage">
            <summary>
                Get the language that the translator is converting the traversal byte code to.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Translator.GroovyTranslator.TraversalSource">
            <summary>
                Gets the <see cref="P:Gremlin.Net.Process.Traversal.Translator.GroovyTranslator.TraversalSource"/> representation rooting this translator.
                This is typically a "g".
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Translator.GroovyTranslator.Translate(Gremlin.Net.Process.Traversal.ITraversal,System.Boolean)">
            <summary>
                Translate <see cref="T:Gremlin.Net.Process.Traversal.ITraversal"/> into gremlin-groovy.
            </summary>
            <param name="traversal">The traversal to translate.</param>
            <param name="isChildTraversal">Whether this is an anonymous traversal (started via '__').</param>
            <returns>The translated gremlin-groovy traversal.</returns>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Translator.GroovyTranslator.Translate(Gremlin.Net.Process.Traversal.Bytecode,System.Boolean)">
            <summary>
                Translate <see cref="T:Gremlin.Net.Process.Traversal.Bytecode"/> into gremlin-groovy.
            </summary>
            <param name="bytecode">The bytecode representing traversal source and traversal manipulations.</param>
            <param name="isChildTraversal">Whether this is an anonymous traversal (started via '__').</param>
            <returns>The translated gremlin-groovy traversal.</returns>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Traverser">
            <summary>
                A traverser represents the current state of an object flowing through a <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Traverser.#ctor(System.Object,System.Int64)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Process.Traversal.Traverser" /> class.
            </summary>
            <param name="obj">The object of the traverser.</param>
            <param name="bulk">The number of traversers represented in this traverser.</param>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Traverser.Object">
            <summary>
                Gets the object of this traverser.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Process.Traversal.Traverser.Bulk">
            <summary>
                Gets the number of traversers represented in this traverser.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Traverser.Equals(Gremlin.Net.Process.Traversal.Traverser)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Traverser.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.Traverser.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.Step.Util.WithOptions">
            <summary>
                Configuration options to be passed to the <c>With()</c> modulator.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Step.Util.WithOptions.Tokens">
            <summary>
                Configures the tokens to be included in value maps.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Step.Util.WithOptions.None">
            <summary>
                Include no tokens.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Step.Util.WithOptions.Ids">
            <summary>
                Include ids (affects all <see cref="T:Gremlin.Net.Structure.Element" /> value maps).
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Step.Util.WithOptions.Labels">
            <summary>
                Include labels (affects all <see cref="T:Gremlin.Net.Structure.Vertex" /> and <see cref="T:Gremlin.Net.Structure.Edge" /> value maps).
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Step.Util.WithOptions.Keys">
            <summary>
                Include keys (affects all <see cref="T:Gremlin.Net.Structure.VertexProperty" /> value maps).
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Step.Util.WithOptions.Values">
            <summary>
                Include values (affects all <see cref="T:Gremlin.Net.Structure.VertexProperty" /> value maps).
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Step.Util.WithOptions.All">
            <summary>
                Include all tokens;
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Step.Util.WithOptions.Indexer">
            <summary>
                Configures the indexer to be used in <see cref="M:Gremlin.Net.Process.Traversal.GraphTraversal`2.Index``1" />.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Step.Util.WithOptions.List">
            <summary>
                Index items using 2-item lists.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Process.Traversal.Step.Util.WithOptions.Map">
            <summary>
                Index items using a map.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Traversal.__">
            <summary>
                An anonymous <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Start">
            <summary>
                Starts an empty <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.V(System.Object[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the V step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.AddE(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the addE step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.AddE(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the addE step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.AddV">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the addV step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.AddV(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the addV step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.AddV(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the addV step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Aggregate(Gremlin.Net.Process.Traversal.Scope,System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the aggregate step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Aggregate(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the aggregate step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.And(Gremlin.Net.Process.Traversal.ITraversal[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the and step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.As(System.String,System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the as step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Barrier">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the barrier step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Barrier(Gremlin.Net.Process.Traversal.IConsumer)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the barrier step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Barrier(System.Int32)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the barrier step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Both(System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the both step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.BothE(System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the bothE step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.BothV">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the bothV step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Branch``1(Gremlin.Net.Process.Traversal.IFunction)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the branch step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Branch``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the branch step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Call``1(System.String)">
            <summary>
                Adds the call step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Call``1(System.String,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
                Adds the call step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Call``1(System.String,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the call step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Call``1(System.String,System.Collections.Generic.IDictionary{System.Object,System.Object},Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the call step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Cap``1(System.String,System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the cap step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Choose``1(Gremlin.Net.Process.Traversal.IFunction)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the choose step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Choose``1(Gremlin.Net.Process.Traversal.IPredicate,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the choose step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Choose``1(Gremlin.Net.Process.Traversal.IPredicate,Gremlin.Net.Process.Traversal.ITraversal,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the choose step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Choose``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the choose step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Choose``1(Gremlin.Net.Process.Traversal.ITraversal,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the choose step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Choose``1(Gremlin.Net.Process.Traversal.ITraversal,Gremlin.Net.Process.Traversal.ITraversal,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the choose step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Coalesce``1(Gremlin.Net.Process.Traversal.ITraversal[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the coalesce step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Coin(System.Double)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the coin step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Constant``1(``0)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the constant step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Count">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the count step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Count(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the count step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.CyclicPath">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the cyclicPath step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Dedup(Gremlin.Net.Process.Traversal.Scope,System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the dedup step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Dedup(System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the dedup step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Drop">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the drop step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Element">
            <summary>
                Adds the element step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.ElementMap``1(System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the elementMap step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Emit">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the emit step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Emit(Gremlin.Net.Process.Traversal.IPredicate)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the emit step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Emit(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the emit step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Fail">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the fail step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Fail(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the fail step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Filter(Gremlin.Net.Process.Traversal.IPredicate)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the filter step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Filter(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the filter step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.FlatMap``1(Gremlin.Net.Process.Traversal.IFunction)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the flatMap step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.FlatMap``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the flatMap step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Fold``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the fold step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Fold``1(``0,Gremlin.Net.Process.Traversal.IBiFunction)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the fold step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Group``2">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the group step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Group(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the group step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.GroupCount``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the groupCount step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.GroupCount(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the groupCount step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Has(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the has step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Has(System.String,System.Object)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the has step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Has(System.String,Gremlin.Net.Process.Traversal.P)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the has step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Has(System.String,System.String,System.Object)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the has step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Has(System.String,System.String,Gremlin.Net.Process.Traversal.P)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the has step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Has(System.String,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the has step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Has(Gremlin.Net.Process.Traversal.T,System.Object)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the has step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Has(Gremlin.Net.Process.Traversal.T,Gremlin.Net.Process.Traversal.P)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the has step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Has(Gremlin.Net.Process.Traversal.T,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the has step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.HasId(System.Object,System.Object[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the hasId step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.HasId(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the hasId step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.HasKey(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the hasKey step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.HasKey(System.String,System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the hasKey step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.HasLabel(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the hasLabel step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.HasLabel(System.String,System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the hasLabel step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.HasNot(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the hasNot step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.HasValue(System.Object,System.Object[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the hasValue step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.HasValue(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the hasValue step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Id">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the id step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Identity">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the identity step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.In(System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the in step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.InE(System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the inE step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.InV">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the inV step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Index``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the index step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Inject(System.Object[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the inject step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Is(System.Object)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the is step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Is(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the is step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Key">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the key step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Label">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the label step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Limit``1(Gremlin.Net.Process.Traversal.Scope,System.Int64)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the limit step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Limit``1(System.Int64)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the limit step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Local``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the local step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Loops">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the loops step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Loops(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the loops step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Map``1(Gremlin.Net.Process.Traversal.IFunction)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the map step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Map``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the map step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Match``1(Gremlin.Net.Process.Traversal.ITraversal[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the match step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Math(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the math step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Max``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the max step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Max``1(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the max step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Mean``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the mean step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Mean``1(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the mean step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.MergeE">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the mergeE step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.MergeE(System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the mergeE step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.MergeE(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the mergeE step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.MergeV">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the mergeV step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.MergeV(System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
                Adds the mergeV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.MergeV(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Adds the mergeV step to this <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Min``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the min step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Min``1(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the min step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Not(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the not step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Optional``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the optional step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Or(Gremlin.Net.Process.Traversal.ITraversal[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the or step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Order">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the order step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Order(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the order step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.OtherV">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the otherV step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Out(System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the out step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.OutE(System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the outE step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.OutV">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the outV step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Path">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the path step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Project``1(System.String,System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the project step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Properties``1(System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the properties step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Property(Gremlin.Net.Process.Traversal.Cardinality,System.Object,System.Object,System.Object[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the property step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Property(System.Object,System.Object,System.Object[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the property step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.PropertyMap``1(System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the propertyMap step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Range``1(Gremlin.Net.Process.Traversal.Scope,System.Int64,System.Int64)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the range step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Range``1(System.Int64,System.Int64)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the range step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Repeat(System.String,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the repeat step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Repeat(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the repeat step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Sack``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the sack step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Sack(Gremlin.Net.Process.Traversal.IBiFunction)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the sack step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Sample(Gremlin.Net.Process.Traversal.Scope,System.Int32)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the sample step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Sample(System.Int32)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the sample step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Select``1(Gremlin.Net.Process.Traversal.Column)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the select step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Select``1(Gremlin.Net.Process.Traversal.Pop,System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the select step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Select``1(Gremlin.Net.Process.Traversal.Pop,System.String,System.String,System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the select step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Select``1(Gremlin.Net.Process.Traversal.Pop,Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the select step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Select``1(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the select step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Select``1(System.String,System.String,System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the select step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Select``1(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the select step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.SideEffect(Gremlin.Net.Process.Traversal.IConsumer)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the sideEffect step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.SideEffect(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the sideEffect step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.SimplePath">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the simplePath step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Skip``1(Gremlin.Net.Process.Traversal.Scope,System.Int64)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the skip step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Skip``1(System.Int64)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the skip step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Store(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the store step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Subgraph(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the subgraph step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Sum``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the sum step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Sum``1(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the sum step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Tail``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the tail step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Tail``1(Gremlin.Net.Process.Traversal.Scope)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the tail step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Tail``1(Gremlin.Net.Process.Traversal.Scope,System.Int64)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the tail step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Tail``1(System.Int64)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the tail step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.TimeLimit(System.Int64)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the timeLimit step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Times(System.Int32)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the times step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.To(Gremlin.Net.Process.Traversal.Direction,System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the to step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.ToE(Gremlin.Net.Process.Traversal.Direction,System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the toE step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.ToV(Gremlin.Net.Process.Traversal.Direction)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the toV step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Tree``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the tree step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Tree(System.String)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the tree step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Unfold``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the unfold step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Union``1(Gremlin.Net.Process.Traversal.ITraversal[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the union step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Until(Gremlin.Net.Process.Traversal.IPredicate)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the until step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Until(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the until step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Value``1">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the value step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.ValueMap``2(System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the valueMap step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.ValueMap``2(System.Boolean,System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the valueMap step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Values``1(System.String[])">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the values step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Where(Gremlin.Net.Process.Traversal.P)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the where step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Where(System.String,Gremlin.Net.Process.Traversal.P)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the where step to that traversal.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Traversal.__.Where(Gremlin.Net.Process.Traversal.ITraversal)">
            <summary>
                Spawns a <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversal`2" /> and adds the where step to that traversal.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Process.Utils">
            <summary>
            Contains useful methods that can be reused across the project. 
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Utils.WaitUnwrap(System.Threading.Tasks.Task)">
            <summary>
            Waits the completion of the provided Task.
            When an AggregateException is thrown, the inner exception is thrown.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Utils.Forget(System.Threading.Tasks.Task)">
            <summary>
            Designed for Tasks that were started but the result should not be awaited upon (fire and forget).
            </summary>
        </member>
        <member name="M:Gremlin.Net.Process.Utils.GenerateUserAgent">
             <summary>
              Returns a user agent for connection request headers.
            
             Format:
             "[Application Name] [GLV Name].[Version] [Language Runtime Version] [OS].[Version] [CPU Architecture]"
             </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.Edge">
            <summary>
                Represents an edge between to vertices.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.Edge.#ctor(System.Object,Gremlin.Net.Structure.Vertex,System.String,Gremlin.Net.Structure.Vertex)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.Edge" /> class.
            </summary>
            <param name="id">The id of the edge.</param>
            <param name="outV">The outgoing/tail vertex of the edge.</param>
            <param name="label">The label of the edge.</param>
            <param name="inV">The incoming/head vertex of the edge.</param>
        </member>
        <member name="P:Gremlin.Net.Structure.Edge.InV">
            <summary>
                Gets or sets the incoming/head vertex of this edge.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.Edge.OutV">
            <summary>
                Gets or sets the outgoing/tail vertex of this edge.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.Edge.ToString">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.Element">
            <summary>
                A common base class for Graph elements.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.Element.#ctor(System.Object,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.Element" /> class.
            </summary>
            <param name="id">The id of the element.</param>
            <param name="label">The label of the element.</param>
        </member>
        <member name="P:Gremlin.Net.Structure.Element.Id">
            <summary>
                Gets the id of this <see cref="T:Gremlin.Net.Structure.Element" />.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.Element.Label">
            <summary>
                Gets the label of this <see cref="T:Gremlin.Net.Structure.Element" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.Element.Equals(Gremlin.Net.Structure.Element)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.Element.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.Element.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.Graph">
            <summary>
                A <see cref="T:Gremlin.Net.Structure.Graph" /> is a container object for a collection of <see cref="T:Gremlin.Net.Structure.Vertex" />, <see cref="T:Gremlin.Net.Structure.Edge" />,
                <see cref="T:Gremlin.Net.Structure.VertexProperty" />, and <see cref="T:Gremlin.Net.Structure.Property" /> objects.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.Graph.Traversal">
            <summary>
                Generates a reusable <see cref="T:Gremlin.Net.Process.Traversal.GraphTraversalSource" /> instance.
            </summary>
            <returns>A graph traversal source.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.DataType">
            <summary>
            Represents a GraphBinary data type.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.DataType.Custom">
            <summary>
            A custom type, represented as a blob value.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.DataType.UnspecifiedNull">
            <summary>
            A null value for an unspecified Object value.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.IO.GraphBinary.DataType.TypeCode">
            <summary>
                Gets the type code of this data type.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.DataType.FromTypeCode(System.Int32)">
            <summary>
            Creates a new <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.DataType"/> instance for the given type code.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.DataType.Equals(Gremlin.Net.Structure.IO.GraphBinary.DataType)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.DataType.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.DataType.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.DataType.op_Equality(Gremlin.Net.Structure.IO.GraphBinary.DataType,Gremlin.Net.Structure.IO.GraphBinary.DataType)">
            <summary>
            Determines whether two specified <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.DataType"/> have the same values.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.DataType.op_Inequality(Gremlin.Net.Structure.IO.GraphBinary.DataType,Gremlin.Net.Structure.IO.GraphBinary.DataType)">
            <summary>
            Determines whether two specified <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.DataType"/> have different values.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.DataType.ToString">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryMessageSerializer">
            <summary>
                Serializes data to and from Gremlin Server in GraphBinary format.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryMessageSerializer.#ctor(Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryMessageSerializer" /> class.
            </summary>
            <param name="registry">The <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry"/> to use for serialization.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryMessageSerializer.#ctor(Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryMessageSerializer" /> class.
            </summary>
            <param name="reader">The <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader"/> used to deserialize from GraphBinary.</param>
            <param name="writer">The <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter"/> used to serialize to GraphBinary.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryMessageSerializer.SerializeMessageAsync(Gremlin.Net.Driver.Messages.RequestMessage,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryMessageSerializer.DeserializeMessageAsync(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader">
            <summary>
            Allows to deserialize objects from GraphBinary.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader.#ctor(Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader" /> class.
            </summary>
            <param name="registry">The <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry"/> to use for deserialization.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader.ReadValueAsync``1(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Reads only the value for a specific type <typeparamref name="T"/>.
            </summary>
            <param name="stream">The GraphBinary data to parse.</param>
            <param name="nullable">Whether or not the value can be null.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <typeparam name="T">The type of the object to read.</typeparam>
            <returns>The read value.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader.ReadAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Reads the type code, information and value with fully-qualified format.
            </summary>
            <param name="stream">The GraphBinary data to parse.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read value.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter">
            <summary>
            Allows to serialize objects to GraphBinary.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter.VersionByte">
            <summary>
            A <see cref="T:System.Byte"/> representing the version of the GraphBinary specification.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter.#ctor(Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter" /> class.
            </summary>
            <param name="registry">The <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry"/> to use for serialization.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter.WriteValueAsync(System.Object,System.IO.Stream,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Writes a value without including type information.
            </summary>
            <param name="value">The value to write.</param>
            <param name="stream">The stream to write to.</param>
            <param name="nullable">Whether or not the value can be null.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter.WriteAsync(System.Object,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Writes an object in fully-qualified format, containing {type_code}{type_info}{value_flag}{value}.
            </summary>
            <param name="value">The value to write.</param>
            <param name="stream">The stream to write to.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter.WriteValueFlagNullAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Writes a single byte representing the null value_flag.
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter.WriteValueFlagNoneAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Writes a single byte with value 0, representing an unset value_flag.
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.ITypeSerializer">
            <summary>
            Represents a serializer for a certain type.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.IO.GraphBinary.ITypeSerializer.DataType">
            <summary>
            Gets the <see cref="P:Gremlin.Net.Structure.IO.GraphBinary.ITypeSerializer.DataType"/> that supported by this serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.ITypeSerializer.WriteAsync(System.Object,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <summary>
            Writes the type code, information and value to a stream.
            </summary>
            <param name="value">The value to write.</param>
            <param name="stream">The stream to write to.</param>
            <param name="writer">A <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter"/> that can be used to write nested values.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.ITypeSerializer.WriteValueAsync(System.Object,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Writes the value to a stream, composed by the value flag and the sequence of bytes.
            </summary>
            <param name="value">The value to write.</param>
            <param name="stream">The stream to write to.</param>
            <param name="writer">A <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter"/> that can be used to write nested values.</param>
            <param name="nullable">Whether or not the value can be null.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.ITypeSerializer.ReadAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <summary>
            Reads the type information and value from the stream.
            </summary>
            <param name="stream">The GraphBinary data to parse.</param>
            <param name="reader">A <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader"/> that can be used to read nested values.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read value.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.ITypeSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Reads the value from the stream (not the type information).
            </summary>
            <param name="stream">The GraphBinary data to parse.</param>
            <param name="reader">A <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader"/> that can be used to read nested values.</param>
            <param name="nullable">Whether or not the value can be null.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read value.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.RequestMessageSerializer">
            <summary>
            Allows to serialize a <see cref="T:Gremlin.Net.Driver.Messages.RequestMessage"/>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.RequestMessageSerializer.WriteValueAsync(Gremlin.Net.Driver.Messages.RequestMessage,System.IO.MemoryStream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <summary>
            Write the request message to a stream.
            </summary>
            <param name="requestMessage">The message to serialize.</param>
            <param name="stream">The stream to write to.</param>
            <param name="writer">A <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter"/> that can be used to write nested values.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.ResponseMessageSerializer">
            <summary>
            Allows to deserialize a <see cref="T:Gremlin.Net.Driver.Messages.ResponseMessage`1"/>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.ResponseMessageSerializer.ReadValueAsync(System.IO.MemoryStream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <summary>
            Reads a response message from the stream.
            </summary>
            <param name="stream">The GraphBinary data to parse.</param>
            <param name="reader">A <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader"/> that can be used to read nested values.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read response message.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions">
            <summary>
                Provides extension methods for <see cref="T:System.IO.Stream" /> that are mostly useful when implementing GraphBinary
                serializers.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.WriteByteAsync(System.IO.Stream,System.Byte,System.Threading.CancellationToken)">
            <summary>
                Asynchronously writes a <see cref="T:System.Byte"/> to a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to write the <see cref="T:System.Byte"/> to.</param>
            <param name="value">The <see cref="T:System.Byte"/> to write.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.ReadByteAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Asynchronously reads a <see cref="T:System.Byte"/> from a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read from.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read <see cref="T:System.Byte"/>.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.WriteIntAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Asynchronously writes an <see cref="T:System.Int32"/> to a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to write the <see cref="T:System.Int32"/> to.</param>
            <param name="value">The <see cref="T:System.Int32"/> to write.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.ReadIntAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Asynchronously reads an <see cref="T:System.Int32"/> from a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read from.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.WriteLongAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)">
            <summary>
                Asynchronously writes a <see cref="T:System.Int64"/> to a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to write the <see cref="T:System.Int64"/> to.</param>
            <param name="value">The <see cref="T:System.Int64"/> to write.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.ReadLongAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Asynchronously reads a <see cref="T:System.Int64"/> from a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read from.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read <see cref="T:System.Int64"/>.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.WriteFloatAsync(System.IO.Stream,System.Single,System.Threading.CancellationToken)">
            <summary>
                Asynchronously writes a <see cref="T:System.Single"/> to a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to write the <see cref="T:System.Single"/> to.</param>
            <param name="value">The <see cref="T:System.Single"/> to write.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.ReadFloatAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Asynchronously reads a <see cref="T:System.Single"/> from a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read from.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read <see cref="T:System.Single"/>.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.WriteDoubleAsync(System.IO.Stream,System.Double,System.Threading.CancellationToken)">
            <summary>
                Asynchronously writes a <see cref="T:System.Double"/> to a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to write the <see cref="T:System.Double"/> to.</param>
            <param name="value">The <see cref="T:System.Double"/> to write.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.ReadDoubleAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Asynchronously reads a <see cref="T:System.Double"/> from a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read from.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.WriteShortAsync(System.IO.Stream,System.Int16,System.Threading.CancellationToken)">
            <summary>
                Asynchronously writes a <see cref="T:System.Int16"/> to a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to write the <see cref="T:System.Int16"/> to.</param>
            <param name="value">The <see cref="T:System.Int16"/> to write.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.ReadShortAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Asynchronously reads a <see cref="T:System.Int16"/> from a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read from.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read <see cref="T:System.Int16"/>.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.WriteBoolAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Asynchronously writes a <see cref="T:System.Boolean"/> to a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to write the <see cref="T:System.Boolean"/> to.</param>
            <param name="value">The <see cref="T:System.Boolean"/> to write.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.ReadBoolAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Asynchronously reads a <see cref="T:System.Boolean"/> from a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read from.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.WriteAsync(System.IO.Stream,System.Byte[],System.Threading.CancellationToken)">
            <summary>
                Asynchronously writes a <see cref="T:byte[]"/> to a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to write the <see cref="T:byte[]"/> to.</param>
            <param name="value">The <see cref="T:byte[]"/> to write.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.StreamExtensions.ReadAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Asynchronously reads a <see cref="T:byte[]"/> from a <see cref="T:System.IO.Stream"/> into a buffer.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read from.</param>
            <param name="count">The number of bytes to read.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read <see cref="T:byte[]"/>.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.ArraySerializer`1">
            <summary>
            A serializer that serializes .NET arrays to GraphBinary lists.
            </summary>
            <typeparam name="TMember">The type of elements in the array.</typeparam>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.ArraySerializer`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.ArraySerializer`1" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.ArraySerializer`1.WriteValueAsync(`0[],System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.ArraySerializer`1.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <summary>
            Currently not supported as GraphBinary has no array data type.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.BigDecimalSerializer">
            <summary>
            A serializer that serializes <see cref="T:System.Decimal"/> values as BigDecimal in GraphBinary.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BigDecimalSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.BigDecimalSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BigDecimalSerializer.WriteValueAsync(System.Decimal,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BigDecimalSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.BigIntegerSerializer">
            <summary>
            A serializer for <see cref="T:System.Numerics.BigInteger"/> values.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BigIntegerSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.BigIntegerSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BigIntegerSerializer.WriteValueAsync(System.Numerics.BigInteger,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BigIntegerSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.BindingSerializer">
            <summary>
            A serializer for <see cref="T:Gremlin.Net.Process.Traversal.Binding"/> values.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BindingSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.BindingSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BindingSerializer.WriteValueAsync(Gremlin.Net.Process.Traversal.Binding,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BindingSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.BulkSetSerializer`1">
            <summary>
            A serializer for the GraphBinary type BulkSet that gets converted to <typeparamref name="TList"/>.
            </summary>
            <typeparam name="TList">The type of the list to convert the BulkSet into.</typeparam>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BulkSetSerializer`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.BulkSetSerializer`1" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BulkSetSerializer`1.WriteValueAsync(`0,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <summary>
            Currently not supported.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BulkSetSerializer`1.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.ByteBufferSerializer">
            <summary>
            A serializer for byte[].
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.ByteBufferSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.ByteBufferSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.ByteBufferSerializer.WriteValueAsync(System.Byte[],System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.ByteBufferSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.BytecodeSerializer">
            <summary>
            A <see cref="T:Gremlin.Net.Process.Traversal.Bytecode"/> serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BytecodeSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.BytecodeSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BytecodeSerializer.WriteValueAsync(Gremlin.Net.Process.Traversal.Bytecode,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.BytecodeSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.CharSerializer">
            <summary>
            A <see cref="T:System.Char"/> serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.CharSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.CharSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.CharSerializer.WriteValueAsync(System.Char,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.CharSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.ClassSerializer">
            <summary>
            A serializer for the GraphBinary type class that takes <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.GremlinType"/> objects as their .NET
            representation. 
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.ClassSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.ClassSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.ClassSerializer.WriteValueAsync(Gremlin.Net.Structure.IO.GraphBinary.Types.GremlinType,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.ClassSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <summary>
            Currently not supported.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.CustomTypeSerializer">
            <summary>
            The interface to implement for serializers of custom types.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.IO.GraphBinary.Types.CustomTypeSerializer.TypeName">
            <summary>
            Gets the custom type name.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.IO.GraphBinary.Types.CustomTypeSerializer.DataType">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.CustomTypeSerializer.WriteAsync(System.Object,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.CustomTypeSerializer.WriteValueAsync(System.Object,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.CustomTypeSerializer.ReadAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.CustomTypeSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.DateTimeOffsetSerializer">
            <summary>
            A serializer for the GraphBinary types Date and Timestamp. Both are represented as <see cref="T:System.DateTimeOffset"/>
            in .NET.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.DateTimeOffsetSerializer.DateSerializer">
            <summary>
            A serializer for the GraphBinary type Date, represented as <see cref="T:System.DateTimeOffset"/> in .NET.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.DateTimeOffsetSerializer.TimestampSerializer">
            <summary>
            A serializer for the GraphBinary type Timestamp, represented as <see cref="T:System.DateTimeOffset"/> in .NET.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.DateTimeOffsetSerializer.WriteValueAsync(System.DateTimeOffset,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.DateTimeOffsetSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.DurationSerializer">
            <summary>
            A serializer that serializes <see cref="T:System.TimeSpan"/> values as Duration in GraphBinary.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.DurationSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.DurationSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.DurationSerializer.WriteValueAsync(System.TimeSpan,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.DurationSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.EdgeSerializer">
            <summary>
            An <see cref="T:Gremlin.Net.Structure.Edge"/> serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.EdgeSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.EdgeSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.EdgeSerializer.WriteValueAsync(Gremlin.Net.Structure.Edge,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.EdgeSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializers">
            <summary>
            Provides serializers for enum types.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializers.BarrierSerializer">
            <summary>
            A serializer for <see cref="T:Gremlin.Net.Process.Traversal.Barrier"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializers.CardinalitySerializer">
            <summary>
            A serializer for <see cref="T:Gremlin.Net.Process.Traversal.Cardinality"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializers.ColumnSerializer">
            <summary>
            A serializer for <see cref="T:Gremlin.Net.Process.Traversal.Column"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializers.DirectionSerializer">
            <summary>
            A serializer for <see cref="T:Gremlin.Net.Process.Traversal.Direction"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializers.MergeSerializer">
            <summary>
            A serializer for <see cref="T:Gremlin.Net.Process.Traversal.Merge"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializers.OperatorSerializer">
            <summary>
            A serializer for <see cref="T:Gremlin.Net.Process.Traversal.Operator"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializers.OrderSerializer">
            <summary>
            A serializer for <see cref="T:Gremlin.Net.Process.Traversal.Order"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializers.PickSerializer">
            <summary>
            A serializer for <see cref="T:Gremlin.Net.Process.Traversal.Pick"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializers.PopSerializer">
            <summary>
            A serializer for <see cref="T:Gremlin.Net.Process.Traversal.Pop"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializers.ScopeSerializer">
            <summary>
            A serializer for <see cref="T:Gremlin.Net.Process.Traversal.Scope"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializers.TSerializer">
            <summary>
            A serializer for <see cref="T:Gremlin.Net.Process.Traversal.T"/> values.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializer`1">
            <summary>
            Generalized serializer for enum types.
            </summary>
            <typeparam name="TEnum">The type of the enum to serialize.</typeparam>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializer`1.WriteValueAsync(`0,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.EnumSerializer`1.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.GremlinType">
            <summary>
                Represents the GraphBinary type Class which can be used to serialize a class.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.IO.GraphBinary.Types.GremlinType.Fqcn">
            <summary>
            Gets the fully qualified class name that identifies the class in Java.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.GremlinType.FromFqcn(System.String)">
            <summary>
            Creates a GremlinType for this fully qualified class name (fqcn).
            </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.LambdaSerializer">
            <summary>
            A serializer for lambdas.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.LambdaSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.LambdaSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.LambdaSerializer.WriteValueAsync(Gremlin.Net.Process.Traversal.ILambda,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.LambdaSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.ListSerializer`1">
            <summary>
            A generic list serializer.
            </summary>
            <typeparam name="TMember">The type of elements in the list.</typeparam>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.ListSerializer`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.ListSerializer`1" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.ListSerializer`1.WriteValueAsync(System.Collections.Generic.IList{`0},System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.ListSerializer`1.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.MapSerializer`2">
            <summary>
            A generic dictionary serializer.
            </summary>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.MapSerializer`2.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.MapSerializer`2" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.MapSerializer`2.WriteValueAsync(System.Collections.Generic.IDictionary{`0,`1},System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.MapSerializer`2.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.PathSerializer">
            <summary>
            A <see cref="T:Gremlin.Net.Structure.Path"/> serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.PathSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.PathSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.PathSerializer.WriteValueAsync(Gremlin.Net.Structure.Path,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.PathSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.PropertySerializer">
            <summary>
            A <see cref="T:Gremlin.Net.Structure.Property"/> serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.PropertySerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.PropertySerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.PropertySerializer.WriteValueAsync(Gremlin.Net.Structure.Property,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.PropertySerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.PSerializer">
            <summary>
            A <see cref="T:Gremlin.Net.Process.Traversal.P"/> serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.PSerializer.#ctor(Gremlin.Net.Structure.IO.GraphBinary.DataType)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.PSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.PSerializer.WriteValueAsync(Gremlin.Net.Process.Traversal.P,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.PSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.SetSerializer`2">
            <summary>
            A generic set serializer.
            </summary>
            <typeparam name="TSet">The type of the set to serialize.</typeparam>
            <typeparam name="TMember">The type of elements in the set.</typeparam>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.SetSerializer`2.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.SetSerializer`2" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.SetSerializer`2.WriteValueAsync(`0,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.SetSerializer`2.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.SimpleTypeSerializer`1">
            <summary>
            Base class for serialization of types that don't contain type specific information only {type_code},
            {value_flag} and {value}.
            </summary>
            <typeparam name="T">The supported type.</typeparam>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.SimpleTypeSerializer`1.#ctor(Gremlin.Net.Structure.IO.GraphBinary.DataType)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.SimpleTypeSerializer`1" /> class.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.IO.GraphBinary.Types.SimpleTypeSerializer`1.DataType">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.SimpleTypeSerializer`1.WriteAsync(System.Object,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.SimpleTypeSerializer`1.WriteValueAsync(System.Object,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.SimpleTypeSerializer`1.WriteValueAsync(`0,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <summary>
            Writes a non-nullable value into a stream.
            </summary>
            <param name="value">The value to write.</param>
            <param name="stream">The stream to write to.</param>
            <param name="writer">A <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter"/>.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.SimpleTypeSerializer`1.ReadAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.SimpleTypeSerializer`1.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.SimpleTypeSerializer`1.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <summary>
            Reads a non-nullable value according to the type format.
            </summary>
            <param name="stream">The GraphBinary data to parse.</param>
            <param name="reader">A <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader"/>.</param>
            <param name="cancellationToken">The token to cancel the operation. The default value is None.</param>
            <returns>The read value.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.SingleTypeSerializers">
            <summary>
            Provides serializers for types that can be represented as a single value and that can be read and write in a
            single operation.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.SingleTypeSerializers.IntSerializer">
            <summary>
            A serializer for <see cref="T:System.Int32"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.SingleTypeSerializers.LongSerializer">
            <summary>
            A serializer for <see cref="T:System.Int64"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.SingleTypeSerializers.DoubleSerializer">
            <summary>
            A serializer for <see cref="T:System.Double"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.SingleTypeSerializers.FloatSerializer">
            <summary>
            A serializer for <see cref="T:System.Single"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.SingleTypeSerializers.ShortSerializer">
            <summary>
            A serializer for <see cref="T:System.Int16"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.SingleTypeSerializers.BooleanSerializer">
            <summary>
            A serializer for <see cref="T:System.Boolean"/> values.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.Types.SingleTypeSerializers.ByteSerializer">
            <summary>
            A serializer for <see cref="T:System.Byte"/> values.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.SingleTypeSerializer`1">
            <summary>
            Represents a serializer for types that can be represented as a single value and that can be read and write in a
            single operation.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.SingleTypeSerializer`1.WriteValueAsync(`0,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.SingleTypeSerializer`1.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.StringSerializer">
            <summary>
            A <see cref="T:System.String"/> serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.StringSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.StringSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.StringSerializer.WriteValueAsync(System.String,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.StringSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.TraversalSerializer">
            <summary>
            A traversal serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.TraversalSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.TraversalSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.TraversalSerializer.WriteValueAsync(Gremlin.Net.Process.Traversal.ITraversal,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.TraversalSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <summary>
            Currently not supported.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.TraversalStrategySerializer">
            <summary>
            A traversal strategy serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.TraversalStrategySerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.TraversalStrategySerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.TraversalStrategySerializer.WriteValueAsync(Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.TraversalStrategySerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <summary>
            Currently not supported.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.TraverserSerializer">
            <summary>
            A <see cref="T:Gremlin.Net.Process.Traversal.Traverser"/> serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.TraverserSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.TraverserSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.TraverserSerializer.WriteValueAsync(Gremlin.Net.Process.Traversal.Traverser,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.TraverserSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.TypeSerializer">
            <summary>
            A serializer for .NET types represented as Class in GraphBinary. Currently only
            <see cref="T:Gremlin.Net.Process.Traversal.Strategy.AbstractTraversalStrategy"/> types are supported.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.TypeSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.TypeSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.TypeSerializer.WriteValueAsync(System.Type,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.TypeSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <summary>
            Currently not supported.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.UuidSerializer">
            <summary>
            A serializer that serializes <see cref="T:System.Guid"/> values as Uuid in GraphBinary.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.UuidSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.UuidSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.UuidSerializer.WriteValueAsync(System.Guid,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.UuidSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.VertexPropertySerializer">
            <summary>
            A <see cref="T:Gremlin.Net.Structure.VertexProperty"/> serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.VertexPropertySerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.VertexPropertySerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.VertexPropertySerializer.WriteValueAsync(Gremlin.Net.Structure.VertexProperty,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.VertexPropertySerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.Types.VertexSerializer">
            <summary>
            A <see cref="T:Gremlin.Net.Structure.Vertex"/> serializer.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.VertexSerializer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.Types.VertexSerializer" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.VertexSerializer.WriteValueAsync(Gremlin.Net.Structure.Vertex,System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryWriter,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.Types.VertexSerializer.ReadValueAsync(System.IO.Stream,Gremlin.Net.Structure.IO.GraphBinary.GraphBinaryReader,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry">
            <summary>
            Provides GraphBinary serializers for different types.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry.Instance">
            <summary>
            Provides a default <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry"/> instance.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry.Build">
            <summary>
            Builds a <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry"/>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry.GetSerializerFor(System.Type)">
            <summary>
            Gets a serializer for the given type of the value to be serialized.
            </summary>
            <param name="valueType">Type of the value to be serialized.</param>
            <returns>A serializer for the provided type.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when no serializer can be found for the type.</exception>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry.GetSerializerFor(Gremlin.Net.Structure.IO.GraphBinary.DataType)">
            <summary>
            Gets a serializer for the given GraphBinary type.
            </summary>
            <param name="type">The GraphBinary type that should be (de)serialized.</param>
            <returns>A serializer for the provided GraphBinary type.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry.GetSerializerForCustomType(System.String)">
            <summary>
            Gets a serializer for the given custom type name.
            </summary>
            <param name="typeName">The custom type name.</param>
            <returns>A serializer for the provided custom type name.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry.Builder">
            <summary>
            The builder of a <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry"/>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry.Builder.Create">
            <summary>
            Creates the <see cref="T:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry"/>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphBinary.TypeSerializerRegistry.Builder.AddCustomType(System.Type,Gremlin.Net.Structure.IO.GraphBinary.Types.CustomTypeSerializer)">
            <summary>
            Adds a serializer for a custom type.
            </summary>
            <param name="type">The custom type supported by the serializer.</param>
            <param name="serializer">The serializer for the custom type.</param>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON2MessageSerializer">
            <summary>
                Serializes data to and from Gremlin Server in GraphSON2 format.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSON2MessageSerializer.#ctor(Gremlin.Net.Structure.IO.GraphSON.GraphSON2Reader,Gremlin.Net.Structure.IO.GraphSON.GraphSON2Writer)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON2MessageSerializer" /> class with custom serializers.
            </summary>
            <param name="graphSONReader">The <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON2Reader"/> used to deserialize from GraphSON.</param>
            <param name="graphSONWriter">The <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON2Writer"/> used to serialize to GraphSON.</param>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON2Reader">
            <summary>
            Handles deserialization of GraphSON3 data.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSON2Reader.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON2Reader"/>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSON2Reader.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,Gremlin.Net.Structure.IO.GraphSON.IGraphSONDeserializer})">
            <summary>
            Creates a new instance of <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON2Reader"/>.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON2Writer">
            <summary>
            Handles serialization of GraphSON2 data.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSON2Writer.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON2Writer"/>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSON2Writer.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.Type,Gremlin.Net.Structure.IO.GraphSON.IGraphSONSerializer})">
            <summary>
            Creates a new instance of <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON2Writer"/>.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON3MessageSerializer">
            <summary>
                Serializes data to and from Gremlin Server in GraphSON3 format.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSON3MessageSerializer.#ctor(Gremlin.Net.Structure.IO.GraphSON.GraphSON3Reader,Gremlin.Net.Structure.IO.GraphSON.GraphSON3Writer)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON3MessageSerializer" /> class with custom serializers.
            </summary>
            <param name="graphSONReader">The <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON3Reader"/> used to deserialize from GraphSON.</param>
            <param name="graphSONWriter">The <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON3Writer"/> used to serialize to GraphSON.</param>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON3Reader">
            <summary>
            Handles deserialization of GraphSON3 data.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSON3Reader.#ctor">
            <summary>
                Creates a new instance of <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON3Reader"/>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSON3Reader.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,Gremlin.Net.Structure.IO.GraphSON.IGraphSONDeserializer})">
            <summary>
                Creates a new instance of <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON3Reader"/>.
            </summary>
            <param name="deserializerByGraphSONType">
                Overrides <see cref="T:Gremlin.Net.Structure.IO.GraphSON.IGraphSONDeserializer" /> instances by their type identifier.
            </param>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON3Writer">
            <summary>
            Handles serialization of GraphSON3 data.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSON3Writer.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON3Writer"/>.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSON3Writer.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.Type,Gremlin.Net.Structure.IO.GraphSON.IGraphSONSerializer})">
            <summary>
                Creates a new instance of <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSON3Writer"/>.
            </summary>
            <param name="customSerializerByType">
                <see cref="T:Gremlin.Net.Structure.IO.GraphSON.IGraphSONSerializer" /> serializers identified by their
                <see cref="T:System.Type" />.
            </param>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONMessageSerializer">
            <summary>
                Serializes data to and from Gremlin Server in GraphSON format.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONMessageSerializer.#ctor(System.String,Gremlin.Net.Structure.IO.GraphSON.GraphSONReader,Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONMessageSerializer" /> class.
            </summary>
            <param name="mimeType">The MIME type supported by this serializer.</param>
            <param name="graphSONReader">The <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONReader"/> used to deserialize from GraphSON.</param>
            <param name="graphSonWriter">The <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter"/> used to serialize to GraphSON.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONMessageSerializer.SerializeMessageAsync(Gremlin.Net.Driver.Messages.RequestMessage,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONMessageSerializer.DeserializeMessageAsync(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONReader">
            <summary>
                Allows to deserialize GraphSON to objects.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphSON.GraphSONReader.Deserializers">
            <summary>
            Contains the <see cref="T:Gremlin.Net.Structure.IO.GraphSON.IGraphSONDeserializer" /> instances by their type identifier. 
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONReader.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONReader" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONReader.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,Gremlin.Net.Structure.IO.GraphSON.IGraphSONDeserializer})">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONReader" /> class.
            </summary>
            <param name="deserializerByGraphSONType">
                <see cref="T:Gremlin.Net.Structure.IO.GraphSON.IGraphSONDeserializer" /> deserializers identified by their
                GraphSON type.
            </param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONReader.ToObject(System.Collections.Generic.IEnumerable{System.Text.Json.JsonElement})">
            <summary>
                Deserializes a GraphSON collection to an object.
            </summary>
            <param name="graphSonData">The GraphSON collection to deserialize.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONReader.ToObject(System.Text.Json.JsonElement)">
            <summary>
                Deserializes GraphSON to an object.
            </summary>
            <param name="graphSon">The GraphSON to deserialize.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONUtil">
            <summary>
                Provides helper methods for GraphSON serialization.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONUtil.ToTypedValue(System.String,System.Object,System.String)">
            <summary>
                Transforms a value intos its GraphSON representation including type information.
            </summary>
            <param name="typename">The name of the type.</param>
            <param name="value">The value to transform.</param>
            <param name="prefix">A namespace prefix for the typename.</param>
            <returns>The GraphSON representation including type information.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONUtil.FormatTypeName(System.String,System.String)">
            <summary>
                Formats a type name with its prefix to a GraphSON TypeID.
            </summary>
            <param name="namespacePrefix">The namespace prefix (default is "g").</param>
            <param name="typeName">The name of the type.</param>
            <returns>The formatted TypeID.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONUtil.ToCollection(System.Object,Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter,System.String)">
            <summary>
            Converts a Collection to a representation of g:List or g:Set
            </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter">
            <summary>
                Allows to serialize objects to GraphSON.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter.Serializers">
            <summary>
            Contains the information of serializers by type.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter" /> class.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.Type,Gremlin.Net.Structure.IO.GraphSON.IGraphSONSerializer})">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter" /> class.
            </summary>
            <param name="customSerializerByType">
                <see cref="T:Gremlin.Net.Structure.IO.GraphSON.IGraphSONSerializer" /> serializers identified by their
                <see cref="T:System.Type" />.
            </param>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter.WriteObject(System.Object)">
            <summary>
                Serializes an object to GraphSON.
            </summary>
            <param name="objectData">The object to serialize.</param>
            <returns>The serialized GraphSON.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter.ToDict(System.Object)">
            <summary>
                Transforms an object into its GraphSON representation including type information.
            </summary>
            <param name="objectData">The object to transform.</param>
            <returns>A GraphSON representation of the object ready to be serialized.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphSON.IGraphSONDeserializer">
            <summary>
                Supports deserializing GraphSON into an object.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.IGraphSONDeserializer.Objectify(System.Text.Json.JsonElement,Gremlin.Net.Structure.IO.GraphSON.GraphSONReader)">
            <summary>
                Deserializes GraphSON to an object.
            </summary>
            <param name="graphsonObject">The GraphSON object to objectify.</param>
            <param name="reader">A <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONReader" /> that can be used to objectify properties of the GraphSON object.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.GraphSON.IGraphSONSerializer">
            <summary>
                Supports serializing of an object to GraphSON.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.IO.GraphSON.IGraphSONSerializer.Dictify(System.Object,Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter)">
            <summary>
                Transforms an object into a dictionary that resembles its GraphSON representation.
            </summary>
            <param name="objectData">The object to dictify.</param>
            <param name="writer">A <see cref="T:Gremlin.Net.Structure.IO.GraphSON.GraphSONWriter" /> that can be used to dictify properties of the object.</param>
            <returns>The GraphSON representation.</returns>
        </member>
        <member name="T:Gremlin.Net.Structure.IO.SerializationTokens">
            <summary>
                String constants used for serialization.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.SerializationTokens.GraphSON2MimeType">
            <summary>
                The MIME type for GraphSON 2.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.SerializationTokens.GraphSON3MimeType">
            <summary>
                The MIME type for GraphSON 3.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.IO.SerializationTokens.GraphBinary1MimeType">
            <summary>
                The MIME type for GraphBinary 1.
            </summary>
        </member>
        <member name="T:Gremlin.Net.Structure.Path">
            <summary>
                A Path denotes a particular walk through a graph as defined by a <see cref="T:Gremlin.Net.Process.Traversal.ITraversal" />.
            </summary>
            <remarks>
                In abstraction, any Path implementation maintains two lists: a list of sets of labels and a list of objects.
                The list of labels are the labels of the steps traversed. The list of objects are the objects traversed.
            </remarks>
        </member>
        <member name="M:Gremlin.Net.Structure.Path.#ctor(System.Collections.Generic.IList{System.Collections.Generic.ISet{System.String}},System.Collections.Generic.IList{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.Path" /> class.
            </summary>
            <param name="labels">The labels associated with the path</param>
            <param name="objects">The objects in the <see cref="T:Gremlin.Net.Structure.Path" />.</param>
        </member>
        <member name="P:Gremlin.Net.Structure.Path.Labels">
            <summary>
                Gets an ordered list of the labels associated with the <see cref="T:Gremlin.Net.Structure.Path" />.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.Path.Objects">
            <summary>
                Gets an ordered list of the objects in the <see cref="T:Gremlin.Net.Structure.Path" />.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.Path.Item(System.String)">
            <summary>
                Gets the object associated with the particular label of the path.
            </summary>
            <remarks>If the path has multiple labels of the type, then get a collection of those objects.</remarks>
            <param name="label">The label of the path</param>
            <returns>The object associated with the label of the path</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown if the path does not contain the label.</exception>
        </member>
        <member name="M:Gremlin.Net.Structure.Path.Equals(Gremlin.Net.Structure.Path)">
            <inheritdoc />
        </member>
        <member name="P:Gremlin.Net.Structure.Path.Item(System.Int32)">
            <summary>
                Get the object associated with the specified index into the path.
            </summary>
            <param name="index">The index of the path</param>
            <returns>The object associated with the index of the path</returns>
        </member>
        <member name="P:Gremlin.Net.Structure.Path.Count">
            <summary>
                Gets the number of steps in the path.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.Path.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.Path.ToString">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.Path.ContainsKey(System.String)">
            <summary>
                Returns true if the path has the specified label, else return false.
            </summary>
            <param name="key">The label to search for.</param>
            <returns>True if the label exists in the path.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.Path.TryGetValue(System.String,System.Object@)">
            <summary>
                Tries to get the object associated with the particular label of the path.
            </summary>
            <remarks>If the path has multiple labels of the type, then get a collection of those objects.</remarks>
            <param name="label">The label of the path.</param>
            <param name="value">The object associated with the label of the path.</param>
            <returns>True, if an object was found for the label.</returns>
        </member>
        <member name="M:Gremlin.Net.Structure.Path.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.Path.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.Property">
            <summary>
                A <see cref="T:Gremlin.Net.Structure.Property" /> denotes a key/value pair associated with an <see cref="T:Gremlin.Net.Structure.Edge" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.Property.#ctor(System.String,System.Object,Gremlin.Net.Structure.Element)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.Property" /> class.
            </summary>
            <param name="key">The key of the property.</param>
            <param name="value">The value of the property.</param>
            <param name="element">The (optional) element that the property is associated with.</param>
        </member>
        <member name="P:Gremlin.Net.Structure.Property.Key">
            <summary>
                Gets the key of the property.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.Property.Value">
            <summary>
                Gets the value of the property.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.Property.Element">
            <summary>
                Gets the element that this property is associated with.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.Property.Equals(Gremlin.Net.Structure.Property)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.Property.ToString">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.Property.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Gremlin.Net.Structure.Property.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.Vertex">
            <summary>
                Represents a vertex.
            </summary>
        </member>
        <member name="F:Gremlin.Net.Structure.Vertex.DefaultLabel">
            <summary>
                The default label to use for a vertex.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.Vertex.#ctor(System.Object,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.Vertex" /> class.
            </summary>
            <param name="id">The id of the vertex.</param>
            <param name="label">The label of the vertex.</param>
        </member>
        <member name="M:Gremlin.Net.Structure.Vertex.ToString">
            <inheritdoc />
        </member>
        <member name="T:Gremlin.Net.Structure.VertexProperty">
            <summary>
                A <see cref="T:Gremlin.Net.Structure.VertexProperty" /> denotes a key/value pair associated with a <see cref="P:Gremlin.Net.Structure.VertexProperty.Vertex" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.VertexProperty.#ctor(System.Object,System.String,System.Object,Gremlin.Net.Structure.Vertex)">
            <summary>
                Initializes a new instance of the <see cref="T:Gremlin.Net.Structure.VertexProperty" /> class.
            </summary>
            <param name="id">The id of the vertex property.</param>
            <param name="label">The label of the vertex property.</param>
            <param name="value">The id of the vertex property.</param>
            <param name="vertex">The (optional) <see cref="P:Gremlin.Net.Structure.VertexProperty.Vertex" /> that owns this <see cref="T:Gremlin.Net.Structure.VertexProperty" />.</param>
        </member>
        <member name="P:Gremlin.Net.Structure.VertexProperty.Value">
            <summary>
                The value of this <see cref="T:Gremlin.Net.Structure.VertexProperty" />.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.VertexProperty.Vertex">
            <summary>
                The <see cref="P:Gremlin.Net.Structure.VertexProperty.Vertex" /> that owns this <see cref="T:Gremlin.Net.Structure.VertexProperty" />.
            </summary>
        </member>
        <member name="P:Gremlin.Net.Structure.VertexProperty.Key">
            <summary>
                The key of this <see cref="T:Gremlin.Net.Structure.VertexProperty" />.
            </summary>
        </member>
        <member name="M:Gremlin.Net.Structure.VertexProperty.ToString">
            <inheritdoc />
        </member>
    </members>
</doc>
